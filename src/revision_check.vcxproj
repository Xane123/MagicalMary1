<?xml version="1.0" encoding="UTF-8"?>
<Project DefaultTargets="Build" ToolsVersion="15.0" xmlns="http://schemas.microsoft.com/developer/msbuild/2003">
  <ItemGroup Label="ProjectConfigurations">
    <ProjectConfiguration Include="Debug|Win32">
      <Configuration>Debug</Configuration>
      <Platform>Win32</Platform>
    </ProjectConfiguration>
    <ProjectConfiguration Include="Release|Win32">
      <Configuration>Release</Configuration>
      <Platform>Win32</Platform>
    </ProjectConfiguration>
    <ProjectConfiguration Include="MinSizeRel|Win32">
      <Configuration>MinSizeRel</Configuration>
      <Platform>Win32</Platform>
    </ProjectConfiguration>
    <ProjectConfiguration Include="RelWithDebInfo|Win32">
      <Configuration>RelWithDebInfo</Configuration>
      <Platform>Win32</Platform>
    </ProjectConfiguration>
  </ItemGroup>
  <PropertyGroup Label="Globals">
    <ProjectGUID>{B33DFFE8-5444-3278-9E7B-76E0B623232A}</ProjectGUID>
    <WindowsTargetPlatformVersion>10.0.15063.0</WindowsTargetPlatformVersion>
    <Keyword>Win32Proj</Keyword>
    <Platform>Win32</Platform>
    <ProjectName>revision_check</ProjectName>
    <VCProjectUpgraderObjectName>NoUpgrade</VCProjectUpgraderObjectName>
  </PropertyGroup>
  <Import Project="$(VCTargetsPath)\Microsoft.Cpp.Default.props" />
  <PropertyGroup Condition="'$(Configuration)|$(Platform)'=='Debug|Win32'" Label="Configuration">
    <ConfigurationType>Utility</ConfigurationType>
    <UseOfMfc>false</UseOfMfc>
    <CharacterSet>MultiByte</CharacterSet>
    <PlatformToolset>v141</PlatformToolset>
  </PropertyGroup>
  <PropertyGroup Condition="'$(Configuration)|$(Platform)'=='Release|Win32'" Label="Configuration">
    <ConfigurationType>Utility</ConfigurationType>
    <UseOfMfc>false</UseOfMfc>
    <CharacterSet>MultiByte</CharacterSet>
    <PlatformToolset>v141</PlatformToolset>
  </PropertyGroup>
  <PropertyGroup Condition="'$(Configuration)|$(Platform)'=='MinSizeRel|Win32'" Label="Configuration">
    <ConfigurationType>Utility</ConfigurationType>
    <UseOfMfc>false</UseOfMfc>
    <CharacterSet>MultiByte</CharacterSet>
    <PlatformToolset>v141</PlatformToolset>
  </PropertyGroup>
  <PropertyGroup Condition="'$(Configuration)|$(Platform)'=='RelWithDebInfo|Win32'" Label="Configuration">
    <ConfigurationType>Utility</ConfigurationType>
    <UseOfMfc>false</UseOfMfc>
    <CharacterSet>MultiByte</CharacterSet>
    <PlatformToolset>v141</PlatformToolset>
  </PropertyGroup>
  <Import Project="$(VCTargetsPath)\Microsoft.Cpp.props" />
  <ImportGroup Label="ExtensionSettings">
  </ImportGroup>
  <ImportGroup Label="PropertySheets">
    <Import Project="$(UserRootDir)\Microsoft.Cpp.$(Platform).user.props" Condition="exists('$(UserRootDir)\Microsoft.Cpp.$(Platform).user.props')" Label="LocalAppDataPlatform" />
  </ImportGroup>
  <PropertyGroup Label="UserMacros" />
    <PropertyGroup>
      <_ProjectFileVersion>10.0.20506.1</_ProjectFileVersion>
      <IntDir Condition="'$(Configuration)|$(Platform)'=='Debug|Win32'">$(Platform)\$(Configuration)\$(ProjectName)\</IntDir>
      <IntDir Condition="'$(Configuration)|$(Platform)'=='Release|Win32'">$(Platform)\$(Configuration)\$(ProjectName)\</IntDir>
      <IntDir Condition="'$(Configuration)|$(Platform)'=='MinSizeRel|Win32'">$(Platform)\$(Configuration)\$(ProjectName)\</IntDir>
      <IntDir Condition="'$(Configuration)|$(Platform)'=='RelWithDebInfo|Win32'">$(Platform)\$(Configuration)\$(ProjectName)\</IntDir>
    </PropertyGroup>
  <ItemDefinitionGroup Condition="'$(Configuration)|$(Platform)'=='Debug|Win32'">
    <Midl>
      <AdditionalIncludeDirectories>C:\Program Files (x86)\Microsoft DirectX SDK (February 2010)\Include;D:\Git\Requirements\OpenAL\include\AL;D:\Git\Failure5\zlib;D:\Git\Failure5\bzip2;D:\Git\Failure5\lzma\C;D:\Git\Failure5\jpeg-6b;D:\Git\Failure5\game-music-emu;D:\Programs\Mega-Nerd\libsndfile\include;D:\Git\Requirements\MPG123;D:\Git\Failure5\src;D:\Git\Failure5\src\.;D:\Git\Failure5\src\g_doom;D:\Git\Failure5\src\g_heretic;D:\Git\Failure5\src\g_hexen;D:\Git\Failure5\src\g_raven;D:\Git\Failure5\src\g_strife;D:\Git\Failure5\src\g_shared;D:\Git\Failure5\src\sound;D:\Git\Failure5\src\textures;D:\Git\Failure5\src\thingdef;D:\Git\Failure5\src\timidity;D:\Git\Failure5\src\wildmidi;D:\Git\Failure5\src\xlat;D:\Git\Failure5\src\zscript;D:\Git\Failure5\src\..\gdtoa;D:\Git\Failure5\src\..\dumb\include;D:\Git\Failure5\gdtoa;D:\Git\Failure5\src\win32;%(AdditionalIncludeDirectories)</AdditionalIncludeDirectories>
      <OutputDirectory>$(ProjectDir)/$(IntDir)</OutputDirectory>
      <HeaderFileName>%(Filename).h</HeaderFileName>
      <TypeLibraryName>%(Filename).tlb</TypeLibraryName>
      <InterfaceIdentifierFileName>%(Filename)_i.c</InterfaceIdentifierFileName>
      <ProxyFileName>%(Filename)_p.c</ProxyFileName>
    </Midl>
  </ItemDefinitionGroup>
  <ItemDefinitionGroup Condition="'$(Configuration)|$(Platform)'=='Release|Win32'">
    <Midl>
      <AdditionalIncludeDirectories>C:\Program Files (x86)\Microsoft DirectX SDK (February 2010)\Include;D:\Git\Requirements\OpenAL\include\AL;D:\Git\Failure5\zlib;D:\Git\Failure5\bzip2;D:\Git\Failure5\lzma\C;D:\Git\Failure5\jpeg-6b;D:\Git\Failure5\game-music-emu;D:\Programs\Mega-Nerd\libsndfile\include;D:\Git\Requirements\MPG123;D:\Git\Failure5\src;D:\Git\Failure5\src\.;D:\Git\Failure5\src\g_doom;D:\Git\Failure5\src\g_heretic;D:\Git\Failure5\src\g_hexen;D:\Git\Failure5\src\g_raven;D:\Git\Failure5\src\g_strife;D:\Git\Failure5\src\g_shared;D:\Git\Failure5\src\sound;D:\Git\Failure5\src\textures;D:\Git\Failure5\src\thingdef;D:\Git\Failure5\src\timidity;D:\Git\Failure5\src\wildmidi;D:\Git\Failure5\src\xlat;D:\Git\Failure5\src\zscript;D:\Git\Failure5\src\..\gdtoa;D:\Git\Failure5\src\..\dumb\include;D:\Git\Failure5\gdtoa;D:\Git\Failure5\src\win32;%(AdditionalIncludeDirectories)</AdditionalIncludeDirectories>
      <OutputDirectory>$(ProjectDir)/$(IntDir)</OutputDirectory>
      <HeaderFileName>%(Filename).h</HeaderFileName>
      <TypeLibraryName>%(Filename).tlb</TypeLibraryName>
      <InterfaceIdentifierFileName>%(Filename)_i.c</InterfaceIdentifierFileName>
      <ProxyFileName>%(Filename)_p.c</ProxyFileName>
    </Midl>
  </ItemDefinitionGroup>
  <ItemDefinitionGroup Condition="'$(Configuration)|$(Platform)'=='MinSizeRel|Win32'">
    <Midl>
      <AdditionalIncludeDirectories>C:\Program Files (x86)\Microsoft DirectX SDK (February 2010)\Include;D:\Git\Requirements\OpenAL\include\AL;D:\Git\Failure5\zlib;D:\Git\Failure5\bzip2;D:\Git\Failure5\lzma\C;D:\Git\Failure5\jpeg-6b;D:\Git\Failure5\game-music-emu;D:\Programs\Mega-Nerd\libsndfile\include;D:\Git\Requirements\MPG123;D:\Git\Failure5\src;D:\Git\Failure5\src\.;D:\Git\Failure5\src\g_doom;D:\Git\Failure5\src\g_heretic;D:\Git\Failure5\src\g_hexen;D:\Git\Failure5\src\g_raven;D:\Git\Failure5\src\g_strife;D:\Git\Failure5\src\g_shared;D:\Git\Failure5\src\sound;D:\Git\Failure5\src\textures;D:\Git\Failure5\src\thingdef;D:\Git\Failure5\src\timidity;D:\Git\Failure5\src\wildmidi;D:\Git\Failure5\src\xlat;D:\Git\Failure5\src\zscript;D:\Git\Failure5\src\..\gdtoa;D:\Git\Failure5\src\..\dumb\include;D:\Git\Failure5\gdtoa;D:\Git\Failure5\src\win32;%(AdditionalIncludeDirectories)</AdditionalIncludeDirectories>
      <OutputDirectory>$(ProjectDir)/$(IntDir)</OutputDirectory>
      <HeaderFileName>%(Filename).h</HeaderFileName>
      <TypeLibraryName>%(Filename).tlb</TypeLibraryName>
      <InterfaceIdentifierFileName>%(Filename)_i.c</InterfaceIdentifierFileName>
      <ProxyFileName>%(Filename)_p.c</ProxyFileName>
    </Midl>
  </ItemDefinitionGroup>
  <ItemDefinitionGroup Condition="'$(Configuration)|$(Platform)'=='RelWithDebInfo|Win32'">
    <Midl>
      <AdditionalIncludeDirectories>C:\Program Files (x86)\Microsoft DirectX SDK (February 2010)\Include;D:\Git\Requirements\OpenAL\include\AL;D:\Git\Failure5\zlib;D:\Git\Failure5\bzip2;D:\Git\Failure5\lzma\C;D:\Git\Failure5\jpeg-6b;D:\Git\Failure5\game-music-emu;D:\Programs\Mega-Nerd\libsndfile\include;D:\Git\Requirements\MPG123;D:\Git\Failure5\src;D:\Git\Failure5\src\.;D:\Git\Failure5\src\g_doom;D:\Git\Failure5\src\g_heretic;D:\Git\Failure5\src\g_hexen;D:\Git\Failure5\src\g_raven;D:\Git\Failure5\src\g_strife;D:\Git\Failure5\src\g_shared;D:\Git\Failure5\src\sound;D:\Git\Failure5\src\textures;D:\Git\Failure5\src\thingdef;D:\Git\Failure5\src\timidity;D:\Git\Failure5\src\wildmidi;D:\Git\Failure5\src\xlat;D:\Git\Failure5\src\zscript;D:\Git\Failure5\src\..\gdtoa;D:\Git\Failure5\src\..\dumb\include;D:\Git\Failure5\gdtoa;D:\Git\Failure5\src\win32;%(AdditionalIncludeDirectories)</AdditionalIncludeDirectories>
      <OutputDirectory>$(ProjectDir)/$(IntDir)</OutputDirectory>
      <HeaderFileName>%(Filename).h</HeaderFileName>
      <TypeLibraryName>%(Filename).tlb</TypeLibraryName>
      <InterfaceIdentifierFileName>%(Filename)_i.c</InterfaceIdentifierFileName>
      <ProxyFileName>%(Filename)_p.c</ProxyFileName>
    </Midl>
  </ItemDefinitionGroup>
  <ItemGroup>
    <CustomBuild Include="D:\Git\Failure5\src\CMakeLists.txt">
      <Message Condition="'$(Configuration)|$(Platform)'=='Debug|Win32'">Building Custom Rule D:/Git/Failure5/src/CMakeLists.txt</Message>
      <Command Condition="'$(Configuration)|$(Platform)'=='Debug|Win32'">setlocal
D:\Programs\CMake\bin\cmake.exe -HD:/Git/Failure5 -BD:/Git/Failure5 --check-stamp-file D:/Git/Failure5/src/CMakeFiles/generate.stamp
if %errorlevel% neq 0 goto :cmEnd
:cmEnd
endlocal &amp; call :cmErrorLevel %errorlevel% &amp; goto :cmDone
:cmErrorLevel
exit /b %1
:cmDone
if %errorlevel% neq 0 goto :VCEnd</Command>
      <AdditionalInputs Condition="'$(Configuration)|$(Platform)'=='Debug|Win32'">D:/Git/Failure5/src/CMakeLists.txt;D:\Git\Failure5\src\CMakeLists.txt;D:\Programs\CMake\share\cmake-3.8\Modules\CheckCXXSourceCompiles.cmake;D:\Programs\CMake\share\cmake-3.8\Modules\CheckFunctionExists.cmake;D:\Programs\CMake\share\cmake-3.8\Modules\CheckCXXCompilerFlag.cmake;D:\Programs\CMake\share\cmake-3.8\Modules\CheckCXXSourceCompiles.cmake;D:\Programs\CMake\share\cmake-3.8\Modules\CMakeCheckCompilerFlagCommonPatterns.cmake;D:\Programs\CMake\share\cmake-3.8\Modules\CheckLibraryExists.cmake;D:\Programs\CMake\share\cmake-3.8\Modules\FindPkgConfig.cmake;D:\Programs\CMake\share\cmake-3.8\Modules\FindPackageHandleStandardArgs.cmake;D:\Programs\CMake\share\cmake-3.8\Modules\FindPackageMessage.cmake;D:\Programs\CMake\share\cmake-3.8\Modules\FindOpenGL.cmake;D:\Programs\CMake\share\cmake-3.8\Modules\FindPackageHandleStandardArgs.cmake;D:\Programs\CMake\share\cmake-3.8\Modules\FindPackageMessage.cmake;D:\Programs\CMake\share\cmake-3.8\Modules\FindOpenAL.cmake;D:\Programs\CMake\share\cmake-3.8\Modules\FindPackageHandleStandardArgs.cmake;D:\Programs\CMake\share\cmake-3.8\Modules\FindPackageMessage.cmake;D:\Git\Failure5\FindSndFile.cmake;D:\Programs\CMake\share\cmake-3.8\Modules\FindPackageHandleStandardArgs.cmake;D:\Programs\CMake\share\cmake-3.8\Modules\FindPackageMessage.cmake;D:\Git\Failure5\FindMPG123.cmake;D:\Programs\CMake\share\cmake-3.8\Modules\FindPackageHandleStandardArgs.cmake;D:\Programs\CMake\share\cmake-3.8\Modules\FindPackageMessage.cmake;D:\Git\Failure5\FindFluidSynth.cmake;D:\Programs\CMake\share\cmake-3.8\Modules\FindPackageHandleStandardArgs.cmake;D:\Programs\CMake\share\cmake-3.8\Modules\FindPackageMessage.cmake;D:\Git\Failure5\launcher-templates\vcxproj.user.in;D:\Git\Failure5\launcher-templates\targetlauncher.cmd.in;D:\Git\Failure5\launcher-templates\targetlauncher.cmd.in;D:\Git\Failure5\launcher-templates\targetlauncher.cmd.in;D:\Git\Failure5\launcher-templates\targetlauncher.cmd.in;D:\Git\Failure5\src\CMakeLists.txt;%(AdditionalInputs)</AdditionalInputs>
      <Outputs Condition="'$(Configuration)|$(Platform)'=='Debug|Win32'">D:\Git\Failure5\src\CMakeFiles\generate.stamp</Outputs>
      <LinkObjects Condition="'$(Configuration)|$(Platform)'=='Debug|Win32'">false</LinkObjects>
      <Message Condition="'$(Configuration)|$(Platform)'=='Release|Win32'">Building Custom Rule D:/Git/Failure5/src/CMakeLists.txt</Message>
      <Command Condition="'$(Configuration)|$(Platform)'=='Release|Win32'">setlocal
D:\Programs\CMake\bin\cmake.exe -HD:/Git/Failure5 -BD:/Git/Failure5 --check-stamp-file D:/Git/Failure5/src/CMakeFiles/generate.stamp
if %errorlevel% neq 0 goto :cmEnd
:cmEnd
endlocal &amp; call :cmErrorLevel %errorlevel% &amp; goto :cmDone
:cmErrorLevel
exit /b %1
:cmDone
if %errorlevel% neq 0 goto :VCEnd</Command>
      <AdditionalInputs Condition="'$(Configuration)|$(Platform)'=='Release|Win32'">D:/Git/Failure5/src/CMakeLists.txt;D:\Git\Failure5\src\CMakeLists.txt;D:\Programs\CMake\share\cmake-3.8\Modules\CheckCXXSourceCompiles.cmake;D:\Programs\CMake\share\cmake-3.8\Modules\CheckFunctionExists.cmake;D:\Programs\CMake\share\cmake-3.8\Modules\CheckCXXCompilerFlag.cmake;D:\Programs\CMake\share\cmake-3.8\Modules\CheckCXXSourceCompiles.cmake;D:\Programs\CMake\share\cmake-3.8\Modules\CMakeCheckCompilerFlagCommonPatterns.cmake;D:\Programs\CMake\share\cmake-3.8\Modules\CheckLibraryExists.cmake;D:\Programs\CMake\share\cmake-3.8\Modules\FindPkgConfig.cmake;D:\Programs\CMake\share\cmake-3.8\Modules\FindPackageHandleStandardArgs.cmake;D:\Programs\CMake\share\cmake-3.8\Modules\FindPackageMessage.cmake;D:\Programs\CMake\share\cmake-3.8\Modules\FindOpenGL.cmake;D:\Programs\CMake\share\cmake-3.8\Modules\FindPackageHandleStandardArgs.cmake;D:\Programs\CMake\share\cmake-3.8\Modules\FindPackageMessage.cmake;D:\Programs\CMake\share\cmake-3.8\Modules\FindOpenAL.cmake;D:\Programs\CMake\share\cmake-3.8\Modules\FindPackageHandleStandardArgs.cmake;D:\Programs\CMake\share\cmake-3.8\Modules\FindPackageMessage.cmake;D:\Git\Failure5\FindSndFile.cmake;D:\Programs\CMake\share\cmake-3.8\Modules\FindPackageHandleStandardArgs.cmake;D:\Programs\CMake\share\cmake-3.8\Modules\FindPackageMessage.cmake;D:\Git\Failure5\FindMPG123.cmake;D:\Programs\CMake\share\cmake-3.8\Modules\FindPackageHandleStandardArgs.cmake;D:\Programs\CMake\share\cmake-3.8\Modules\FindPackageMessage.cmake;D:\Git\Failure5\FindFluidSynth.cmake;D:\Programs\CMake\share\cmake-3.8\Modules\FindPackageHandleStandardArgs.cmake;D:\Programs\CMake\share\cmake-3.8\Modules\FindPackageMessage.cmake;D:\Git\Failure5\launcher-templates\vcxproj.user.in;D:\Git\Failure5\launcher-templates\targetlauncher.cmd.in;D:\Git\Failure5\launcher-templates\targetlauncher.cmd.in;D:\Git\Failure5\launcher-templates\targetlauncher.cmd.in;D:\Git\Failure5\launcher-templates\targetlauncher.cmd.in;D:\Git\Failure5\src\CMakeLists.txt;%(AdditionalInputs)</AdditionalInputs>
      <Outputs Condition="'$(Configuration)|$(Platform)'=='Release|Win32'">D:\Git\Failure5\src\CMakeFiles\generate.stamp</Outputs>
      <LinkObjects Condition="'$(Configuration)|$(Platform)'=='Release|Win32'">false</LinkObjects>
      <Message Condition="'$(Configuration)|$(Platform)'=='MinSizeRel|Win32'">Building Custom Rule D:/Git/Failure5/src/CMakeLists.txt</Message>
      <Command Condition="'$(Configuration)|$(Platform)'=='MinSizeRel|Win32'">setlocal
D:\Programs\CMake\bin\cmake.exe -HD:/Git/Failure5 -BD:/Git/Failure5 --check-stamp-file D:/Git/Failure5/src/CMakeFiles/generate.stamp
if %errorlevel% neq 0 goto :cmEnd
:cmEnd
endlocal &amp; call :cmErrorLevel %errorlevel% &amp; goto :cmDone
:cmErrorLevel
exit /b %1
:cmDone
if %errorlevel% neq 0 goto :VCEnd</Command>
      <AdditionalInputs Condition="'$(Configuration)|$(Platform)'=='MinSizeRel|Win32'">D:/Git/Failure5/src/CMakeLists.txt;D:\Git\Failure5\src\CMakeLists.txt;D:\Programs\CMake\share\cmake-3.8\Modules\CheckCXXSourceCompiles.cmake;D:\Programs\CMake\share\cmake-3.8\Modules\CheckFunctionExists.cmake;D:\Programs\CMake\share\cmake-3.8\Modules\CheckCXXCompilerFlag.cmake;D:\Programs\CMake\share\cmake-3.8\Modules\CheckCXXSourceCompiles.cmake;D:\Programs\CMake\share\cmake-3.8\Modules\CMakeCheckCompilerFlagCommonPatterns.cmake;D:\Programs\CMake\share\cmake-3.8\Modules\CheckLibraryExists.cmake;D:\Programs\CMake\share\cmake-3.8\Modules\FindPkgConfig.cmake;D:\Programs\CMake\share\cmake-3.8\Modules\FindPackageHandleStandardArgs.cmake;D:\Programs\CMake\share\cmake-3.8\Modules\FindPackageMessage.cmake;D:\Programs\CMake\share\cmake-3.8\Modules\FindOpenGL.cmake;D:\Programs\CMake\share\cmake-3.8\Modules\FindPackageHandleStandardArgs.cmake;D:\Programs\CMake\share\cmake-3.8\Modules\FindPackageMessage.cmake;D:\Programs\CMake\share\cmake-3.8\Modules\FindOpenAL.cmake;D:\Programs\CMake\share\cmake-3.8\Modules\FindPackageHandleStandardArgs.cmake;D:\Programs\CMake\share\cmake-3.8\Modules\FindPackageMessage.cmake;D:\Git\Failure5\FindSndFile.cmake;D:\Programs\CMake\share\cmake-3.8\Modules\FindPackageHandleStandardArgs.cmake;D:\Programs\CMake\share\cmake-3.8\Modules\FindPackageMessage.cmake;D:\Git\Failure5\FindMPG123.cmake;D:\Programs\CMake\share\cmake-3.8\Modules\FindPackageHandleStandardArgs.cmake;D:\Programs\CMake\share\cmake-3.8\Modules\FindPackageMessage.cmake;D:\Git\Failure5\FindFluidSynth.cmake;D:\Programs\CMake\share\cmake-3.8\Modules\FindPackageHandleStandardArgs.cmake;D:\Programs\CMake\share\cmake-3.8\Modules\FindPackageMessage.cmake;D:\Git\Failure5\launcher-templates\vcxproj.user.in;D:\Git\Failure5\launcher-templates\targetlauncher.cmd.in;D:\Git\Failure5\launcher-templates\targetlauncher.cmd.in;D:\Git\Failure5\launcher-templates\targetlauncher.cmd.in;D:\Git\Failure5\launcher-templates\targetlauncher.cmd.in;D:\Git\Failure5\src\CMakeLists.txt;%(AdditionalInputs)</AdditionalInputs>
      <Outputs Condition="'$(Configuration)|$(Platform)'=='MinSizeRel|Win32'">D:\Git\Failure5\src\CMakeFiles\generate.stamp</Outputs>
      <LinkObjects Condition="'$(Configuration)|$(Platform)'=='MinSizeRel|Win32'">false</LinkObjects>
      <Message Condition="'$(Configuration)|$(Platform)'=='RelWithDebInfo|Win32'">Building Custom Rule D:/Git/Failure5/src/CMakeLists.txt</Message>
      <Command Condition="'$(Configuration)|$(Platform)'=='RelWithDebInfo|Win32'">setlocal
D:\Programs\CMake\bin\cmake.exe -HD:/Git/Failure5 -BD:/Git/Failure5 --check-stamp-file D:/Git/Failure5/src/CMakeFiles/generate.stamp
if %errorlevel% neq 0 goto :cmEnd
:cmEnd
endlocal &amp; call :cmErrorLevel %errorlevel% &amp; goto :cmDone
:cmErrorLevel
exit /b %1
:cmDone
if %errorlevel% neq 0 goto :VCEnd</Command>
      <AdditionalInputs Condition="'$(Configuration)|$(Platform)'=='RelWithDebInfo|Win32'">D:/Git/Failure5/src/CMakeLists.txt;D:\Git\Failure5\src\CMakeLists.txt;D:\Programs\CMake\share\cmake-3.8\Modules\CheckCXXSourceCompiles.cmake;D:\Programs\CMake\share\cmake-3.8\Modules\CheckFunctionExists.cmake;D:\Programs\CMake\share\cmake-3.8\Modules\CheckCXXCompilerFlag.cmake;D:\Programs\CMake\share\cmake-3.8\Modules\CheckCXXSourceCompiles.cmake;D:\Programs\CMake\share\cmake-3.8\Modules\CMakeCheckCompilerFlagCommonPatterns.cmake;D:\Programs\CMake\share\cmake-3.8\Modules\CheckLibraryExists.cmake;D:\Programs\CMake\share\cmake-3.8\Modules\FindPkgConfig.cmake;D:\Programs\CMake\share\cmake-3.8\Modules\FindPackageHandleStandardArgs.cmake;D:\Programs\CMake\share\cmake-3.8\Modules\FindPackageMessage.cmake;D:\Programs\CMake\share\cmake-3.8\Modules\FindOpenGL.cmake;D:\Programs\CMake\share\cmake-3.8\Modules\FindPackageHandleStandardArgs.cmake;D:\Programs\CMake\share\cmake-3.8\Modules\FindPackageMessage.cmake;D:\Programs\CMake\share\cmake-3.8\Modules\FindOpenAL.cmake;D:\Programs\CMake\share\cmake-3.8\Modules\FindPackageHandleStandardArgs.cmake;D:\Programs\CMake\share\cmake-3.8\Modules\FindPackageMessage.cmake;D:\Git\Failure5\FindSndFile.cmake;D:\Programs\CMake\share\cmake-3.8\Modules\FindPackageHandleStandardArgs.cmake;D:\Programs\CMake\share\cmake-3.8\Modules\FindPackageMessage.cmake;D:\Git\Failure5\FindMPG123.cmake;D:\Programs\CMake\share\cmake-3.8\Modules\FindPackageHandleStandardArgs.cmake;D:\Programs\CMake\share\cmake-3.8\Modules\FindPackageMessage.cmake;D:\Git\Failure5\FindFluidSynth.cmake;D:\Programs\CMake\share\cmake-3.8\Modules\FindPackageHandleStandardArgs.cmake;D:\Programs\CMake\share\cmake-3.8\Modules\FindPackageMessage.cmake;D:\Git\Failure5\launcher-templates\vcxproj.user.in;D:\Git\Failure5\launcher-templates\targetlauncher.cmd.in;D:\Git\Failure5\launcher-templates\targetlauncher.cmd.in;D:\Git\Failure5\launcher-templates\targetlauncher.cmd.in;D:\Git\Failure5\launcher-templates\targetlauncher.cmd.in;D:\Git\Failure5\src\CMakeLists.txt;%(AdditionalInputs)</AdditionalInputs>
      <Outputs Condition="'$(Configuration)|$(Platform)'=='RelWithDebInfo|Win32'">D:\Git\Failure5\src\CMakeFiles\generate.stamp</Outputs>
      <LinkObjects Condition="'$(Configuration)|$(Platform)'=='RelWithDebInfo|Win32'">false</LinkObjects>
    </CustomBuild>
  </ItemGroup>
  <ItemGroup>
    <CustomBuild Include="D:\Git\Failure5\CMakeFiles\d300d2a4d43acdf2baaca830c397632e\revision_check.rule">
      <Message Condition="'$(Configuration)|$(Platform)'=='Debug|Win32'"></Message>
      <Command Condition="'$(Configuration)|$(Platform)'=='Debug|Win32'">setlocal
cd D:\Git\Failure5
if %errorlevel% neq 0 goto :cmEnd
D:
if %errorlevel% neq 0 goto :cmEnd
D:\Git\Failure5\tools\updaterevision\Debug\updaterevision.exe src/gitinfo.h
if %errorlevel% neq 0 goto :cmEnd
:cmEnd
endlocal &amp; call :cmErrorLevel %errorlevel% &amp; goto :cmDone
:cmErrorLevel
exit /b %1
:cmDone
if %errorlevel% neq 0 goto :VCEnd</Command>
      <AdditionalInputs Condition="'$(Configuration)|$(Platform)'=='Debug|Win32'">D:/Git/Failure5/CMakeFiles/d300d2a4d43acdf2baaca830c397632e/revision_check.rule;D:\Git\Failure5\tools\updaterevision\Debug\updaterevision.exe;%(AdditionalInputs)</AdditionalInputs>
      <Outputs Condition="'$(Configuration)|$(Platform)'=='Debug|Win32'">D:\Git\Failure5\src\CMakeFiles\revision_check</Outputs>
      <LinkObjects Condition="'$(Configuration)|$(Platform)'=='Debug|Win32'">false</LinkObjects>
      <Message Condition="'$(Configuration)|$(Platform)'=='Release|Win32'"></Message>
      <Command Condition="'$(Configuration)|$(Platform)'=='Release|Win32'">setlocal
cd D:\Git\Failure5
if %errorlevel% neq 0 goto :cmEnd
D:
if %errorlevel% neq 0 goto :cmEnd
D:\Git\Failure5\tools\updaterevision\Release\updaterevision.exe src/gitinfo.h
if %errorlevel% neq 0 goto :cmEnd
:cmEnd
endlocal &amp; call :cmErrorLevel %errorlevel% &amp; goto :cmDone
:cmErrorLevel
exit /b %1
:cmDone
if %errorlevel% neq 0 goto :VCEnd</Command>
      <AdditionalInputs Condition="'$(Configuration)|$(Platform)'=='Release|Win32'">D:/Git/Failure5/CMakeFiles/d300d2a4d43acdf2baaca830c397632e/revision_check.rule;D:\Git\Failure5\tools\updaterevision\Release\updaterevision.exe;%(AdditionalInputs)</AdditionalInputs>
      <Outputs Condition="'$(Configuration)|$(Platform)'=='Release|Win32'">D:\Git\Failure5\src\CMakeFiles\revision_check</Outputs>
      <LinkObjects Condition="'$(Configuration)|$(Platform)'=='Release|Win32'">false</LinkObjects>
      <Message Condition="'$(Configuration)|$(Platform)'=='MinSizeRel|Win32'"></Message>
      <Command Condition="'$(Configuration)|$(Platform)'=='MinSizeRel|Win32'">setlocal
cd D:\Git\Failure5
if %errorlevel% neq 0 goto :cmEnd
D:
if %errorlevel% neq 0 goto :cmEnd
D:\Git\Failure5\tools\updaterevision\MinSizeRel\updaterevision.exe src/gitinfo.h
if %errorlevel% neq 0 goto :cmEnd
:cmEnd
endlocal &amp; call :cmErrorLevel %errorlevel% &amp; goto :cmDone
:cmErrorLevel
exit /b %1
:cmDone
if %errorlevel% neq 0 goto :VCEnd</Command>
      <AdditionalInputs Condition="'$(Configuration)|$(Platform)'=='MinSizeRel|Win32'">D:/Git/Failure5/CMakeFiles/d300d2a4d43acdf2baaca830c397632e/revision_check.rule;D:\Git\Failure5\tools\updaterevision\MinSizeRel\updaterevision.exe;%(AdditionalInputs)</AdditionalInputs>
      <Outputs Condition="'$(Configuration)|$(Platform)'=='MinSizeRel|Win32'">D:\Git\Failure5\src\CMakeFiles\revision_check</Outputs>
      <LinkObjects Condition="'$(Configuration)|$(Platform)'=='MinSizeRel|Win32'">false</LinkObjects>
      <Message Condition="'$(Configuration)|$(Platform)'=='RelWithDebInfo|Win32'"></Message>
      <Command Condition="'$(Configuration)|$(Platform)'=='RelWithDebInfo|Win32'">setlocal
cd D:\Git\Failure5
if %errorlevel% neq 0 goto :cmEnd
D:
if %errorlevel% neq 0 goto :cmEnd
D:\Git\Failure5\tools\updaterevision\RelWithDebInfo\updaterevision.exe src/gitinfo.h
if %errorlevel% neq 0 goto :cmEnd
:cmEnd
endlocal &amp; call :cmErrorLevel %errorlevel% &amp; goto :cmDone
:cmErrorLevel
exit /b %1
:cmDone
if %errorlevel% neq 0 goto :VCEnd</Command>
      <AdditionalInputs Condition="'$(Configuration)|$(Platform)'=='RelWithDebInfo|Win32'">D:/Git/Failure5/CMakeFiles/d300d2a4d43acdf2baaca830c397632e/revision_check.rule;D:\Git\Failure5\tools\updaterevision\RelWithDebInfo\updaterevision.exe;%(AdditionalInputs)</AdditionalInputs>
      <Outputs Condition="'$(Configuration)|$(Platform)'=='RelWithDebInfo|Win32'">D:\Git\Failure5\src\CMakeFiles\revision_check</Outputs>
      <LinkObjects Condition="'$(Configuration)|$(Platform)'=='RelWithDebInfo|Win32'">false</LinkObjects>
    </CustomBuild>
  </ItemGroup>
  <ItemGroup>
    <None Include="D:\Git\Failure5\src\CMakeFiles\revision_check" />
  </ItemGroup>
  <ItemGroup>
    <ProjectReference Include="D:\Git\Failure5\ZERO_CHECK.vcxproj">
      <Project>20956D98-6C14-3A6B-9647-B87ADE645DD9</Project>
      <Name>ZERO_CHECK</Name>
    </ProjectReference>
    <ProjectReference Include="D:\Git\Failure5\tools\updaterevision\updaterevision.vcxproj">
      <Project>D5C9889E-17B2-39F5-AF07-C890D8BE3ABA</Project>
      <Name>updaterevision</Name>
    </ProjectReference>
  </ItemGroup>
  <Import Project="$(VCTargetsPath)\Microsoft.Cpp.targets" />
  <ImportGroup Label="ExtensionTargets">
  </ImportGroup>
</Project>