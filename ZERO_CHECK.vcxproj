<?xml version="1.0" encoding="UTF-8"?>
<Project DefaultTargets="Build" ToolsVersion="15.0" xmlns="http://schemas.microsoft.com/developer/msbuild/2003">
  <ItemGroup Label="ProjectConfigurations">
    <ProjectConfiguration Include="Debug|Win32">
      <Configuration>Debug</Configuration>
      <Platform>Win32</Platform>
    </ProjectConfiguration>
    <ProjectConfiguration Include="Release|Win32">
      <Configuration>Release</Configuration>
      <Platform>Win32</Platform>
    </ProjectConfiguration>
    <ProjectConfiguration Include="MinSizeRel|Win32">
      <Configuration>MinSizeRel</Configuration>
      <Platform>Win32</Platform>
    </ProjectConfiguration>
    <ProjectConfiguration Include="RelWithDebInfo|Win32">
      <Configuration>RelWithDebInfo</Configuration>
      <Platform>Win32</Platform>
    </ProjectConfiguration>
  </ItemGroup>
  <PropertyGroup Label="Globals">
    <ProjectGUID>{20956D98-6C14-3A6B-9647-B87ADE645DD9}</ProjectGUID>
    <WindowsTargetPlatformVersion>10.0.15063.0</WindowsTargetPlatformVersion>
    <Keyword>Win32Proj</Keyword>
    <Platform>Win32</Platform>
    <ProjectName>ZERO_CHECK</ProjectName>
    <VCProjectUpgraderObjectName>NoUpgrade</VCProjectUpgraderObjectName>
  </PropertyGroup>
  <Import Project="$(VCTargetsPath)\Microsoft.Cpp.Default.props" />
  <PropertyGroup Condition="'$(Configuration)|$(Platform)'=='Debug|Win32'" Label="Configuration">
    <ConfigurationType>Utility</ConfigurationType>
    <UseOfMfc>false</UseOfMfc>
    <CharacterSet>MultiByte</CharacterSet>
    <PlatformToolset>v141</PlatformToolset>
  </PropertyGroup>
  <PropertyGroup Condition="'$(Configuration)|$(Platform)'=='Release|Win32'" Label="Configuration">
    <ConfigurationType>Utility</ConfigurationType>
    <UseOfMfc>false</UseOfMfc>
    <CharacterSet>MultiByte</CharacterSet>
    <PlatformToolset>v141</PlatformToolset>
  </PropertyGroup>
  <PropertyGroup Condition="'$(Configuration)|$(Platform)'=='MinSizeRel|Win32'" Label="Configuration">
    <ConfigurationType>Utility</ConfigurationType>
    <UseOfMfc>false</UseOfMfc>
    <CharacterSet>MultiByte</CharacterSet>
    <PlatformToolset>v141</PlatformToolset>
  </PropertyGroup>
  <PropertyGroup Condition="'$(Configuration)|$(Platform)'=='RelWithDebInfo|Win32'" Label="Configuration">
    <ConfigurationType>Utility</ConfigurationType>
    <UseOfMfc>false</UseOfMfc>
    <CharacterSet>MultiByte</CharacterSet>
    <PlatformToolset>v141</PlatformToolset>
  </PropertyGroup>
  <Import Project="$(VCTargetsPath)\Microsoft.Cpp.props" />
  <ImportGroup Label="ExtensionSettings">
  </ImportGroup>
  <ImportGroup Label="PropertySheets">
    <Import Project="$(UserRootDir)\Microsoft.Cpp.$(Platform).user.props" Condition="exists('$(UserRootDir)\Microsoft.Cpp.$(Platform).user.props')" Label="LocalAppDataPlatform" />
  </ImportGroup>
  <PropertyGroup Label="UserMacros" />
    <PropertyGroup>
      <_ProjectFileVersion>10.0.20506.1</_ProjectFileVersion>
      <IntDir Condition="'$(Configuration)|$(Platform)'=='Debug|Win32'">$(Platform)\$(Configuration)\$(ProjectName)\</IntDir>
      <IntDir Condition="'$(Configuration)|$(Platform)'=='Release|Win32'">$(Platform)\$(Configuration)\$(ProjectName)\</IntDir>
      <IntDir Condition="'$(Configuration)|$(Platform)'=='MinSizeRel|Win32'">$(Platform)\$(Configuration)\$(ProjectName)\</IntDir>
      <IntDir Condition="'$(Configuration)|$(Platform)'=='RelWithDebInfo|Win32'">$(Platform)\$(Configuration)\$(ProjectName)\</IntDir>
    </PropertyGroup>
  <ItemDefinitionGroup Condition="'$(Configuration)|$(Platform)'=='Debug|Win32'">
    <Midl>
      <AdditionalIncludeDirectories>%(AdditionalIncludeDirectories)</AdditionalIncludeDirectories>
      <OutputDirectory>$(ProjectDir)/$(IntDir)</OutputDirectory>
      <HeaderFileName>%(Filename).h</HeaderFileName>
      <TypeLibraryName>%(Filename).tlb</TypeLibraryName>
      <InterfaceIdentifierFileName>%(Filename)_i.c</InterfaceIdentifierFileName>
      <ProxyFileName>%(Filename)_p.c</ProxyFileName>
    </Midl>
  </ItemDefinitionGroup>
  <ItemDefinitionGroup Condition="'$(Configuration)|$(Platform)'=='Release|Win32'">
    <Midl>
      <AdditionalIncludeDirectories>%(AdditionalIncludeDirectories)</AdditionalIncludeDirectories>
      <OutputDirectory>$(ProjectDir)/$(IntDir)</OutputDirectory>
      <HeaderFileName>%(Filename).h</HeaderFileName>
      <TypeLibraryName>%(Filename).tlb</TypeLibraryName>
      <InterfaceIdentifierFileName>%(Filename)_i.c</InterfaceIdentifierFileName>
      <ProxyFileName>%(Filename)_p.c</ProxyFileName>
    </Midl>
  </ItemDefinitionGroup>
  <ItemDefinitionGroup Condition="'$(Configuration)|$(Platform)'=='MinSizeRel|Win32'">
    <Midl>
      <AdditionalIncludeDirectories>%(AdditionalIncludeDirectories)</AdditionalIncludeDirectories>
      <OutputDirectory>$(ProjectDir)/$(IntDir)</OutputDirectory>
      <HeaderFileName>%(Filename).h</HeaderFileName>
      <TypeLibraryName>%(Filename).tlb</TypeLibraryName>
      <InterfaceIdentifierFileName>%(Filename)_i.c</InterfaceIdentifierFileName>
      <ProxyFileName>%(Filename)_p.c</ProxyFileName>
    </Midl>
  </ItemDefinitionGroup>
  <ItemDefinitionGroup Condition="'$(Configuration)|$(Platform)'=='RelWithDebInfo|Win32'">
    <Midl>
      <AdditionalIncludeDirectories>%(AdditionalIncludeDirectories)</AdditionalIncludeDirectories>
      <OutputDirectory>$(ProjectDir)/$(IntDir)</OutputDirectory>
      <HeaderFileName>%(Filename).h</HeaderFileName>
      <TypeLibraryName>%(Filename).tlb</TypeLibraryName>
      <InterfaceIdentifierFileName>%(Filename)_i.c</InterfaceIdentifierFileName>
      <ProxyFileName>%(Filename)_p.c</ProxyFileName>
    </Midl>
  </ItemDefinitionGroup>
  <ItemGroup>
    <CustomBuild Include="D:\Git\Failure5\CMakeFiles\ee46adff95cdea35aa1be2acfb678602\generate.stamp.rule">
      <Message Condition="'$(Configuration)|$(Platform)'=='Debug|Win32'">Checking Build System</Message>
      <Command Condition="'$(Configuration)|$(Platform)'=='Debug|Win32'">setlocal
D:\Programs\CMake\bin\cmake.exe -HD:/Git/Failure5 -BD:/Git/Failure5 --check-stamp-list CMakeFiles/generate.stamp.list --vs-solution-file D:/Git/Failure5/GZDoom.sln
if %errorlevel% neq 0 goto :cmEnd
:cmEnd
endlocal &amp; call :cmErrorLevel %errorlevel% &amp; goto :cmDone
:cmErrorLevel
exit /b %1
:cmDone
if %errorlevel% neq 0 goto :VCEnd</Command>
      <AdditionalInputs Condition="'$(Configuration)|$(Platform)'=='Debug|Win32'">D:/Git/Failure5/CMakeFiles/ee46adff95cdea35aa1be2acfb678602/generate.stamp.rule;D:\Git\Failure5\CMakeFiles\3.8.0\CMakeCCompiler.cmake;D:\Git\Failure5\CMakeFiles\3.8.0\CMakeCXXCompiler.cmake;D:\Git\Failure5\CMakeFiles\3.8.0\CMakeRCCompiler.cmake;D:\Git\Failure5\CMakeFiles\3.8.0\CMakeSystem.cmake;D:\Git\Failure5\CMakeLists.txt;D:\Git\Failure5\CleanDirectoryList.cmake;D:\Git\Failure5\CreateLaunchers.cmake;D:\Git\Failure5\FindFluidSynth.cmake;D:\Git\Failure5\FindMPG123.cmake;D:\Git\Failure5\FindSndFile.cmake;D:\Git\Failure5\bzip2\CMakeLists.txt;D:\Git\Failure5\dumb\CMakeLists.txt;D:\Git\Failure5\game-music-emu\CMakeLists.txt;D:\Git\Failure5\game-music-emu\gme\CMakeLists.txt;D:\Git\Failure5\game-music-emu\gme\gme_types.h.in;D:\Git\Failure5\gdtoa\CMakeLists.txt;D:\Git\Failure5\jpeg-6b\CMakeLists.txt;D:\Git\Failure5\launcher-templates\targetlauncher.cmd.in;D:\Git\Failure5\launcher-templates\vcxproj.user.in;D:\Git\Failure5\lzma\CMakeLists.txt;D:\Git\Failure5\src\CMakeLists.txt;D:\Git\Failure5\tools\CMakeLists.txt;D:\Git\Failure5\tools\fixrtext\CMakeLists.txt;D:\Git\Failure5\tools\lemon\CMakeLists.txt;D:\Git\Failure5\tools\re2c\CMakeLists.txt;D:\Git\Failure5\tools\re2c\config.h.in;D:\Git\Failure5\tools\updaterevision\CMakeLists.txt;D:\Git\Failure5\tools\zipdir\CMakeLists.txt;D:\Git\Failure5\wadsrc\CMakeLists.txt;D:\Git\Failure5\wadsrc_bm\CMakeLists.txt;D:\Git\Failure5\wadsrc_lights\CMakeLists.txt;D:\Git\Failure5\zlib\CMakeLists.txt;D:\Programs\CMake\share\cmake-3.8\Modules\CMakeCInformation.cmake;D:\Programs\CMake\share\cmake-3.8\Modules\CMakeCXXInformation.cmake;D:\Programs\CMake\share\cmake-3.8\Modules\CMakeCheckCompilerFlagCommonPatterns.cmake;D:\Programs\CMake\share\cmake-3.8\Modules\CMakeCommonLanguageInclude.cmake;D:\Programs\CMake\share\cmake-3.8\Modules\CMakeGenericSystem.cmake;D:\Programs\CMake\share\cmake-3.8\Modules\CMakeLanguageInformation.cmake;D:\Programs\CMake\share\cmake-3.8\Modules\CMakeRCInformation.cmake;D:\Programs\CMake\share\cmake-3.8\Modules\CMakeSystemSpecificInformation.cmake;D:\Programs\CMake\share\cmake-3.8\Modules\CMakeSystemSpecificInitialize.cmake;D:\Programs\CMake\share\cmake-3.8\Modules\CheckCSourceCompiles.cmake;D:\Programs\CMake\share\cmake-3.8\Modules\CheckCXXCompilerFlag.cmake;D:\Programs\CMake\share\cmake-3.8\Modules\CheckCXXSourceCompiles.cmake;D:\Programs\CMake\share\cmake-3.8\Modules\CheckFunctionExists.cmake;D:\Programs\CMake\share\cmake-3.8\Modules\CheckIncludeFile.cmake;D:\Programs\CMake\share\cmake-3.8\Modules\CheckIncludeFileCXX.cmake;D:\Programs\CMake\share\cmake-3.8\Modules\CheckLibraryExists.cmake;D:\Programs\CMake\share\cmake-3.8\Modules\CheckTypeSize.cmake;D:\Programs\CMake\share\cmake-3.8\Modules\Compiler\MSVC-CXX.cmake;D:\Programs\CMake\share\cmake-3.8\Modules\FindBZip2.cmake;D:\Programs\CMake\share\cmake-3.8\Modules\FindJPEG.cmake;D:\Programs\CMake\share\cmake-3.8\Modules\FindOpenAL.cmake;D:\Programs\CMake\share\cmake-3.8\Modules\FindOpenGL.cmake;D:\Programs\CMake\share\cmake-3.8\Modules\FindPackageHandleStandardArgs.cmake;D:\Programs\CMake\share\cmake-3.8\Modules\FindPackageMessage.cmake;D:\Programs\CMake\share\cmake-3.8\Modules\FindPkgConfig.cmake;D:\Programs\CMake\share\cmake-3.8\Modules\FindZLIB.cmake;D:\Programs\CMake\share\cmake-3.8\Modules\Platform\Windows-MSVC-C.cmake;D:\Programs\CMake\share\cmake-3.8\Modules\Platform\Windows-MSVC-CXX.cmake;D:\Programs\CMake\share\cmake-3.8\Modules\Platform\Windows-MSVC.cmake;D:\Programs\CMake\share\cmake-3.8\Modules\Platform\Windows.cmake;D:\Programs\CMake\share\cmake-3.8\Modules\Platform\WindowsPaths.cmake;D:\Programs\CMake\share\cmake-3.8\Modules\SelectLibraryConfigurations.cmake;%(AdditionalInputs)</AdditionalInputs>
      <Outputs Condition="'$(Configuration)|$(Platform)'=='Debug|Win32'">D:\Git\Failure5\CMakeFiles\generate.stamp;D:\Git\Failure5\zlib\CMakeFiles\generate.stamp;D:\Git\Failure5\jpeg-6b\CMakeFiles\generate.stamp;D:\Git\Failure5\bzip2\CMakeFiles\generate.stamp;D:\Git\Failure5\game-music-emu\CMakeFiles\generate.stamp;D:\Git\Failure5\game-music-emu\gme\CMakeFiles\generate.stamp;D:\Git\Failure5\lzma\CMakeFiles\generate.stamp;D:\Git\Failure5\tools\CMakeFiles\generate.stamp;D:\Git\Failure5\tools\lemon\CMakeFiles\generate.stamp;D:\Git\Failure5\tools\re2c\CMakeFiles\generate.stamp;D:\Git\Failure5\tools\fixrtext\CMakeFiles\generate.stamp;D:\Git\Failure5\tools\updaterevision\CMakeFiles\generate.stamp;D:\Git\Failure5\tools\zipdir\CMakeFiles\generate.stamp;D:\Git\Failure5\dumb\CMakeFiles\generate.stamp;D:\Git\Failure5\gdtoa\CMakeFiles\generate.stamp;D:\Git\Failure5\wadsrc\CMakeFiles\generate.stamp;D:\Git\Failure5\wadsrc_bm\CMakeFiles\generate.stamp;D:\Git\Failure5\wadsrc_lights\CMakeFiles\generate.stamp;D:\Git\Failure5\src\CMakeFiles\generate.stamp</Outputs>
      <LinkObjects Condition="'$(Configuration)|$(Platform)'=='Debug|Win32'">false</LinkObjects>
      <Message Condition="'$(Configuration)|$(Platform)'=='Release|Win32'">Checking Build System</Message>
      <Command Condition="'$(Configuration)|$(Platform)'=='Release|Win32'">setlocal
D:\Programs\CMake\bin\cmake.exe -HD:/Git/Failure5 -BD:/Git/Failure5 --check-stamp-list CMakeFiles/generate.stamp.list --vs-solution-file D:/Git/Failure5/GZDoom.sln
if %errorlevel% neq 0 goto :cmEnd
:cmEnd
endlocal &amp; call :cmErrorLevel %errorlevel% &amp; goto :cmDone
:cmErrorLevel
exit /b %1
:cmDone
if %errorlevel% neq 0 goto :VCEnd</Command>
      <AdditionalInputs Condition="'$(Configuration)|$(Platform)'=='Release|Win32'">D:/Git/Failure5/CMakeFiles/ee46adff95cdea35aa1be2acfb678602/generate.stamp.rule;D:\Git\Failure5\CMakeFiles\3.8.0\CMakeCCompiler.cmake;D:\Git\Failure5\CMakeFiles\3.8.0\CMakeCXXCompiler.cmake;D:\Git\Failure5\CMakeFiles\3.8.0\CMakeRCCompiler.cmake;D:\Git\Failure5\CMakeFiles\3.8.0\CMakeSystem.cmake;D:\Git\Failure5\CMakeLists.txt;D:\Git\Failure5\CleanDirectoryList.cmake;D:\Git\Failure5\CreateLaunchers.cmake;D:\Git\Failure5\FindFluidSynth.cmake;D:\Git\Failure5\FindMPG123.cmake;D:\Git\Failure5\FindSndFile.cmake;D:\Git\Failure5\bzip2\CMakeLists.txt;D:\Git\Failure5\dumb\CMakeLists.txt;D:\Git\Failure5\game-music-emu\CMakeLists.txt;D:\Git\Failure5\game-music-emu\gme\CMakeLists.txt;D:\Git\Failure5\game-music-emu\gme\gme_types.h.in;D:\Git\Failure5\gdtoa\CMakeLists.txt;D:\Git\Failure5\jpeg-6b\CMakeLists.txt;D:\Git\Failure5\launcher-templates\targetlauncher.cmd.in;D:\Git\Failure5\launcher-templates\vcxproj.user.in;D:\Git\Failure5\lzma\CMakeLists.txt;D:\Git\Failure5\src\CMakeLists.txt;D:\Git\Failure5\tools\CMakeLists.txt;D:\Git\Failure5\tools\fixrtext\CMakeLists.txt;D:\Git\Failure5\tools\lemon\CMakeLists.txt;D:\Git\Failure5\tools\re2c\CMakeLists.txt;D:\Git\Failure5\tools\re2c\config.h.in;D:\Git\Failure5\tools\updaterevision\CMakeLists.txt;D:\Git\Failure5\tools\zipdir\CMakeLists.txt;D:\Git\Failure5\wadsrc\CMakeLists.txt;D:\Git\Failure5\wadsrc_bm\CMakeLists.txt;D:\Git\Failure5\wadsrc_lights\CMakeLists.txt;D:\Git\Failure5\zlib\CMakeLists.txt;D:\Programs\CMake\share\cmake-3.8\Modules\CMakeCInformation.cmake;D:\Programs\CMake\share\cmake-3.8\Modules\CMakeCXXInformation.cmake;D:\Programs\CMake\share\cmake-3.8\Modules\CMakeCheckCompilerFlagCommonPatterns.cmake;D:\Programs\CMake\share\cmake-3.8\Modules\CMakeCommonLanguageInclude.cmake;D:\Programs\CMake\share\cmake-3.8\Modules\CMakeGenericSystem.cmake;D:\Programs\CMake\share\cmake-3.8\Modules\CMakeLanguageInformation.cmake;D:\Programs\CMake\share\cmake-3.8\Modules\CMakeRCInformation.cmake;D:\Programs\CMake\share\cmake-3.8\Modules\CMakeSystemSpecificInformation.cmake;D:\Programs\CMake\share\cmake-3.8\Modules\CMakeSystemSpecificInitialize.cmake;D:\Programs\CMake\share\cmake-3.8\Modules\CheckCSourceCompiles.cmake;D:\Programs\CMake\share\cmake-3.8\Modules\CheckCXXCompilerFlag.cmake;D:\Programs\CMake\share\cmake-3.8\Modules\CheckCXXSourceCompiles.cmake;D:\Programs\CMake\share\cmake-3.8\Modules\CheckFunctionExists.cmake;D:\Programs\CMake\share\cmake-3.8\Modules\CheckIncludeFile.cmake;D:\Programs\CMake\share\cmake-3.8\Modules\CheckIncludeFileCXX.cmake;D:\Programs\CMake\share\cmake-3.8\Modules\CheckLibraryExists.cmake;D:\Programs\CMake\share\cmake-3.8\Modules\CheckTypeSize.cmake;D:\Programs\CMake\share\cmake-3.8\Modules\Compiler\MSVC-CXX.cmake;D:\Programs\CMake\share\cmake-3.8\Modules\FindBZip2.cmake;D:\Programs\CMake\share\cmake-3.8\Modules\FindJPEG.cmake;D:\Programs\CMake\share\cmake-3.8\Modules\FindOpenAL.cmake;D:\Programs\CMake\share\cmake-3.8\Modules\FindOpenGL.cmake;D:\Programs\CMake\share\cmake-3.8\Modules\FindPackageHandleStandardArgs.cmake;D:\Programs\CMake\share\cmake-3.8\Modules\FindPackageMessage.cmake;D:\Programs\CMake\share\cmake-3.8\Modules\FindPkgConfig.cmake;D:\Programs\CMake\share\cmake-3.8\Modules\FindZLIB.cmake;D:\Programs\CMake\share\cmake-3.8\Modules\Platform\Windows-MSVC-C.cmake;D:\Programs\CMake\share\cmake-3.8\Modules\Platform\Windows-MSVC-CXX.cmake;D:\Programs\CMake\share\cmake-3.8\Modules\Platform\Windows-MSVC.cmake;D:\Programs\CMake\share\cmake-3.8\Modules\Platform\Windows.cmake;D:\Programs\CMake\share\cmake-3.8\Modules\Platform\WindowsPaths.cmake;D:\Programs\CMake\share\cmake-3.8\Modules\SelectLibraryConfigurations.cmake;%(AdditionalInputs)</AdditionalInputs>
      <Outputs Condition="'$(Configuration)|$(Platform)'=='Release|Win32'">D:\Git\Failure5\CMakeFiles\generate.stamp;D:\Git\Failure5\zlib\CMakeFiles\generate.stamp;D:\Git\Failure5\jpeg-6b\CMakeFiles\generate.stamp;D:\Git\Failure5\bzip2\CMakeFiles\generate.stamp;D:\Git\Failure5\game-music-emu\CMakeFiles\generate.stamp;D:\Git\Failure5\game-music-emu\gme\CMakeFiles\generate.stamp;D:\Git\Failure5\lzma\CMakeFiles\generate.stamp;D:\Git\Failure5\tools\CMakeFiles\generate.stamp;D:\Git\Failure5\tools\lemon\CMakeFiles\generate.stamp;D:\Git\Failure5\tools\re2c\CMakeFiles\generate.stamp;D:\Git\Failure5\tools\fixrtext\CMakeFiles\generate.stamp;D:\Git\Failure5\tools\updaterevision\CMakeFiles\generate.stamp;D:\Git\Failure5\tools\zipdir\CMakeFiles\generate.stamp;D:\Git\Failure5\dumb\CMakeFiles\generate.stamp;D:\Git\Failure5\gdtoa\CMakeFiles\generate.stamp;D:\Git\Failure5\wadsrc\CMakeFiles\generate.stamp;D:\Git\Failure5\wadsrc_bm\CMakeFiles\generate.stamp;D:\Git\Failure5\wadsrc_lights\CMakeFiles\generate.stamp;D:\Git\Failure5\src\CMakeFiles\generate.stamp</Outputs>
      <LinkObjects Condition="'$(Configuration)|$(Platform)'=='Release|Win32'">false</LinkObjects>
      <Message Condition="'$(Configuration)|$(Platform)'=='MinSizeRel|Win32'">Checking Build System</Message>
      <Command Condition="'$(Configuration)|$(Platform)'=='MinSizeRel|Win32'">setlocal
D:\Programs\CMake\bin\cmake.exe -HD:/Git/Failure5 -BD:/Git/Failure5 --check-stamp-list CMakeFiles/generate.stamp.list --vs-solution-file D:/Git/Failure5/GZDoom.sln
if %errorlevel% neq 0 goto :cmEnd
:cmEnd
endlocal &amp; call :cmErrorLevel %errorlevel% &amp; goto :cmDone
:cmErrorLevel
exit /b %1
:cmDone
if %errorlevel% neq 0 goto :VCEnd</Command>
      <AdditionalInputs Condition="'$(Configuration)|$(Platform)'=='MinSizeRel|Win32'">D:/Git/Failure5/CMakeFiles/ee46adff95cdea35aa1be2acfb678602/generate.stamp.rule;D:\Git\Failure5\CMakeFiles\3.8.0\CMakeCCompiler.cmake;D:\Git\Failure5\CMakeFiles\3.8.0\CMakeCXXCompiler.cmake;D:\Git\Failure5\CMakeFiles\3.8.0\CMakeRCCompiler.cmake;D:\Git\Failure5\CMakeFiles\3.8.0\CMakeSystem.cmake;D:\Git\Failure5\CMakeLists.txt;D:\Git\Failure5\CleanDirectoryList.cmake;D:\Git\Failure5\CreateLaunchers.cmake;D:\Git\Failure5\FindFluidSynth.cmake;D:\Git\Failure5\FindMPG123.cmake;D:\Git\Failure5\FindSndFile.cmake;D:\Git\Failure5\bzip2\CMakeLists.txt;D:\Git\Failure5\dumb\CMakeLists.txt;D:\Git\Failure5\game-music-emu\CMakeLists.txt;D:\Git\Failure5\game-music-emu\gme\CMakeLists.txt;D:\Git\Failure5\game-music-emu\gme\gme_types.h.in;D:\Git\Failure5\gdtoa\CMakeLists.txt;D:\Git\Failure5\jpeg-6b\CMakeLists.txt;D:\Git\Failure5\launcher-templates\targetlauncher.cmd.in;D:\Git\Failure5\launcher-templates\vcxproj.user.in;D:\Git\Failure5\lzma\CMakeLists.txt;D:\Git\Failure5\src\CMakeLists.txt;D:\Git\Failure5\tools\CMakeLists.txt;D:\Git\Failure5\tools\fixrtext\CMakeLists.txt;D:\Git\Failure5\tools\lemon\CMakeLists.txt;D:\Git\Failure5\tools\re2c\CMakeLists.txt;D:\Git\Failure5\tools\re2c\config.h.in;D:\Git\Failure5\tools\updaterevision\CMakeLists.txt;D:\Git\Failure5\tools\zipdir\CMakeLists.txt;D:\Git\Failure5\wadsrc\CMakeLists.txt;D:\Git\Failure5\wadsrc_bm\CMakeLists.txt;D:\Git\Failure5\wadsrc_lights\CMakeLists.txt;D:\Git\Failure5\zlib\CMakeLists.txt;D:\Programs\CMake\share\cmake-3.8\Modules\CMakeCInformation.cmake;D:\Programs\CMake\share\cmake-3.8\Modules\CMakeCXXInformation.cmake;D:\Programs\CMake\share\cmake-3.8\Modules\CMakeCheckCompilerFlagCommonPatterns.cmake;D:\Programs\CMake\share\cmake-3.8\Modules\CMakeCommonLanguageInclude.cmake;D:\Programs\CMake\share\cmake-3.8\Modules\CMakeGenericSystem.cmake;D:\Programs\CMake\share\cmake-3.8\Modules\CMakeLanguageInformation.cmake;D:\Programs\CMake\share\cmake-3.8\Modules\CMakeRCInformation.cmake;D:\Programs\CMake\share\cmake-3.8\Modules\CMakeSystemSpecificInformation.cmake;D:\Programs\CMake\share\cmake-3.8\Modules\CMakeSystemSpecificInitialize.cmake;D:\Programs\CMake\share\cmake-3.8\Modules\CheckCSourceCompiles.cmake;D:\Programs\CMake\share\cmake-3.8\Modules\CheckCXXCompilerFlag.cmake;D:\Programs\CMake\share\cmake-3.8\Modules\CheckCXXSourceCompiles.cmake;D:\Programs\CMake\share\cmake-3.8\Modules\CheckFunctionExists.cmake;D:\Programs\CMake\share\cmake-3.8\Modules\CheckIncludeFile.cmake;D:\Programs\CMake\share\cmake-3.8\Modules\CheckIncludeFileCXX.cmake;D:\Programs\CMake\share\cmake-3.8\Modules\CheckLibraryExists.cmake;D:\Programs\CMake\share\cmake-3.8\Modules\CheckTypeSize.cmake;D:\Programs\CMake\share\cmake-3.8\Modules\Compiler\MSVC-CXX.cmake;D:\Programs\CMake\share\cmake-3.8\Modules\FindBZip2.cmake;D:\Programs\CMake\share\cmake-3.8\Modules\FindJPEG.cmake;D:\Programs\CMake\share\cmake-3.8\Modules\FindOpenAL.cmake;D:\Programs\CMake\share\cmake-3.8\Modules\FindOpenGL.cmake;D:\Programs\CMake\share\cmake-3.8\Modules\FindPackageHandleStandardArgs.cmake;D:\Programs\CMake\share\cmake-3.8\Modules\FindPackageMessage.cmake;D:\Programs\CMake\share\cmake-3.8\Modules\FindPkgConfig.cmake;D:\Programs\CMake\share\cmake-3.8\Modules\FindZLIB.cmake;D:\Programs\CMake\share\cmake-3.8\Modules\Platform\Windows-MSVC-C.cmake;D:\Programs\CMake\share\cmake-3.8\Modules\Platform\Windows-MSVC-CXX.cmake;D:\Programs\CMake\share\cmake-3.8\Modules\Platform\Windows-MSVC.cmake;D:\Programs\CMake\share\cmake-3.8\Modules\Platform\Windows.cmake;D:\Programs\CMake\share\cmake-3.8\Modules\Platform\WindowsPaths.cmake;D:\Programs\CMake\share\cmake-3.8\Modules\SelectLibraryConfigurations.cmake;%(AdditionalInputs)</AdditionalInputs>
      <Outputs Condition="'$(Configuration)|$(Platform)'=='MinSizeRel|Win32'">D:\Git\Failure5\CMakeFiles\generate.stamp;D:\Git\Failure5\zlib\CMakeFiles\generate.stamp;D:\Git\Failure5\jpeg-6b\CMakeFiles\generate.stamp;D:\Git\Failure5\bzip2\CMakeFiles\generate.stamp;D:\Git\Failure5\game-music-emu\CMakeFiles\generate.stamp;D:\Git\Failure5\game-music-emu\gme\CMakeFiles\generate.stamp;D:\Git\Failure5\lzma\CMakeFiles\generate.stamp;D:\Git\Failure5\tools\CMakeFiles\generate.stamp;D:\Git\Failure5\tools\lemon\CMakeFiles\generate.stamp;D:\Git\Failure5\tools\re2c\CMakeFiles\generate.stamp;D:\Git\Failure5\tools\fixrtext\CMakeFiles\generate.stamp;D:\Git\Failure5\tools\updaterevision\CMakeFiles\generate.stamp;D:\Git\Failure5\tools\zipdir\CMakeFiles\generate.stamp;D:\Git\Failure5\dumb\CMakeFiles\generate.stamp;D:\Git\Failure5\gdtoa\CMakeFiles\generate.stamp;D:\Git\Failure5\wadsrc\CMakeFiles\generate.stamp;D:\Git\Failure5\wadsrc_bm\CMakeFiles\generate.stamp;D:\Git\Failure5\wadsrc_lights\CMakeFiles\generate.stamp;D:\Git\Failure5\src\CMakeFiles\generate.stamp</Outputs>
      <LinkObjects Condition="'$(Configuration)|$(Platform)'=='MinSizeRel|Win32'">false</LinkObjects>
      <Message Condition="'$(Configuration)|$(Platform)'=='RelWithDebInfo|Win32'">Checking Build System</Message>
      <Command Condition="'$(Configuration)|$(Platform)'=='RelWithDebInfo|Win32'">setlocal
D:\Programs\CMake\bin\cmake.exe -HD:/Git/Failure5 -BD:/Git/Failure5 --check-stamp-list CMakeFiles/generate.stamp.list --vs-solution-file D:/Git/Failure5/GZDoom.sln
if %errorlevel% neq 0 goto :cmEnd
:cmEnd
endlocal &amp; call :cmErrorLevel %errorlevel% &amp; goto :cmDone
:cmErrorLevel
exit /b %1
:cmDone
if %errorlevel% neq 0 goto :VCEnd</Command>
      <AdditionalInputs Condition="'$(Configuration)|$(Platform)'=='RelWithDebInfo|Win32'">D:/Git/Failure5/CMakeFiles/ee46adff95cdea35aa1be2acfb678602/generate.stamp.rule;D:\Git\Failure5\CMakeFiles\3.8.0\CMakeCCompiler.cmake;D:\Git\Failure5\CMakeFiles\3.8.0\CMakeCXXCompiler.cmake;D:\Git\Failure5\CMakeFiles\3.8.0\CMakeRCCompiler.cmake;D:\Git\Failure5\CMakeFiles\3.8.0\CMakeSystem.cmake;D:\Git\Failure5\CMakeLists.txt;D:\Git\Failure5\CleanDirectoryList.cmake;D:\Git\Failure5\CreateLaunchers.cmake;D:\Git\Failure5\FindFluidSynth.cmake;D:\Git\Failure5\FindMPG123.cmake;D:\Git\Failure5\FindSndFile.cmake;D:\Git\Failure5\bzip2\CMakeLists.txt;D:\Git\Failure5\dumb\CMakeLists.txt;D:\Git\Failure5\game-music-emu\CMakeLists.txt;D:\Git\Failure5\game-music-emu\gme\CMakeLists.txt;D:\Git\Failure5\game-music-emu\gme\gme_types.h.in;D:\Git\Failure5\gdtoa\CMakeLists.txt;D:\Git\Failure5\jpeg-6b\CMakeLists.txt;D:\Git\Failure5\launcher-templates\targetlauncher.cmd.in;D:\Git\Failure5\launcher-templates\vcxproj.user.in;D:\Git\Failure5\lzma\CMakeLists.txt;D:\Git\Failure5\src\CMakeLists.txt;D:\Git\Failure5\tools\CMakeLists.txt;D:\Git\Failure5\tools\fixrtext\CMakeLists.txt;D:\Git\Failure5\tools\lemon\CMakeLists.txt;D:\Git\Failure5\tools\re2c\CMakeLists.txt;D:\Git\Failure5\tools\re2c\config.h.in;D:\Git\Failure5\tools\updaterevision\CMakeLists.txt;D:\Git\Failure5\tools\zipdir\CMakeLists.txt;D:\Git\Failure5\wadsrc\CMakeLists.txt;D:\Git\Failure5\wadsrc_bm\CMakeLists.txt;D:\Git\Failure5\wadsrc_lights\CMakeLists.txt;D:\Git\Failure5\zlib\CMakeLists.txt;D:\Programs\CMake\share\cmake-3.8\Modules\CMakeCInformation.cmake;D:\Programs\CMake\share\cmake-3.8\Modules\CMakeCXXInformation.cmake;D:\Programs\CMake\share\cmake-3.8\Modules\CMakeCheckCompilerFlagCommonPatterns.cmake;D:\Programs\CMake\share\cmake-3.8\Modules\CMakeCommonLanguageInclude.cmake;D:\Programs\CMake\share\cmake-3.8\Modules\CMakeGenericSystem.cmake;D:\Programs\CMake\share\cmake-3.8\Modules\CMakeLanguageInformation.cmake;D:\Programs\CMake\share\cmake-3.8\Modules\CMakeRCInformation.cmake;D:\Programs\CMake\share\cmake-3.8\Modules\CMakeSystemSpecificInformation.cmake;D:\Programs\CMake\share\cmake-3.8\Modules\CMakeSystemSpecificInitialize.cmake;D:\Programs\CMake\share\cmake-3.8\Modules\CheckCSourceCompiles.cmake;D:\Programs\CMake\share\cmake-3.8\Modules\CheckCXXCompilerFlag.cmake;D:\Programs\CMake\share\cmake-3.8\Modules\CheckCXXSourceCompiles.cmake;D:\Programs\CMake\share\cmake-3.8\Modules\CheckFunctionExists.cmake;D:\Programs\CMake\share\cmake-3.8\Modules\CheckIncludeFile.cmake;D:\Programs\CMake\share\cmake-3.8\Modules\CheckIncludeFileCXX.cmake;D:\Programs\CMake\share\cmake-3.8\Modules\CheckLibraryExists.cmake;D:\Programs\CMake\share\cmake-3.8\Modules\CheckTypeSize.cmake;D:\Programs\CMake\share\cmake-3.8\Modules\Compiler\MSVC-CXX.cmake;D:\Programs\CMake\share\cmake-3.8\Modules\FindBZip2.cmake;D:\Programs\CMake\share\cmake-3.8\Modules\FindJPEG.cmake;D:\Programs\CMake\share\cmake-3.8\Modules\FindOpenAL.cmake;D:\Programs\CMake\share\cmake-3.8\Modules\FindOpenGL.cmake;D:\Programs\CMake\share\cmake-3.8\Modules\FindPackageHandleStandardArgs.cmake;D:\Programs\CMake\share\cmake-3.8\Modules\FindPackageMessage.cmake;D:\Programs\CMake\share\cmake-3.8\Modules\FindPkgConfig.cmake;D:\Programs\CMake\share\cmake-3.8\Modules\FindZLIB.cmake;D:\Programs\CMake\share\cmake-3.8\Modules\Platform\Windows-MSVC-C.cmake;D:\Programs\CMake\share\cmake-3.8\Modules\Platform\Windows-MSVC-CXX.cmake;D:\Programs\CMake\share\cmake-3.8\Modules\Platform\Windows-MSVC.cmake;D:\Programs\CMake\share\cmake-3.8\Modules\Platform\Windows.cmake;D:\Programs\CMake\share\cmake-3.8\Modules\Platform\WindowsPaths.cmake;D:\Programs\CMake\share\cmake-3.8\Modules\SelectLibraryConfigurations.cmake;%(AdditionalInputs)</AdditionalInputs>
      <Outputs Condition="'$(Configuration)|$(Platform)'=='RelWithDebInfo|Win32'">D:\Git\Failure5\CMakeFiles\generate.stamp;D:\Git\Failure5\zlib\CMakeFiles\generate.stamp;D:\Git\Failure5\jpeg-6b\CMakeFiles\generate.stamp;D:\Git\Failure5\bzip2\CMakeFiles\generate.stamp;D:\Git\Failure5\game-music-emu\CMakeFiles\generate.stamp;D:\Git\Failure5\game-music-emu\gme\CMakeFiles\generate.stamp;D:\Git\Failure5\lzma\CMakeFiles\generate.stamp;D:\Git\Failure5\tools\CMakeFiles\generate.stamp;D:\Git\Failure5\tools\lemon\CMakeFiles\generate.stamp;D:\Git\Failure5\tools\re2c\CMakeFiles\generate.stamp;D:\Git\Failure5\tools\fixrtext\CMakeFiles\generate.stamp;D:\Git\Failure5\tools\updaterevision\CMakeFiles\generate.stamp;D:\Git\Failure5\tools\zipdir\CMakeFiles\generate.stamp;D:\Git\Failure5\dumb\CMakeFiles\generate.stamp;D:\Git\Failure5\gdtoa\CMakeFiles\generate.stamp;D:\Git\Failure5\wadsrc\CMakeFiles\generate.stamp;D:\Git\Failure5\wadsrc_bm\CMakeFiles\generate.stamp;D:\Git\Failure5\wadsrc_lights\CMakeFiles\generate.stamp;D:\Git\Failure5\src\CMakeFiles\generate.stamp</Outputs>
      <LinkObjects Condition="'$(Configuration)|$(Platform)'=='RelWithDebInfo|Win32'">false</LinkObjects>
    </CustomBuild>
  </ItemGroup>
  <ItemGroup>
  </ItemGroup>
  <ItemGroup>
  </ItemGroup>
  <Import Project="$(VCTargetsPath)\Microsoft.Cpp.targets" />
  <ImportGroup Label="ExtensionTargets">
  </ImportGroup>
</Project>