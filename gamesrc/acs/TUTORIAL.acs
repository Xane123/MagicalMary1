#library "XGLOBAL"
#include "zcommon.acs"

world bool 9:level_ready;	//This prevents certain scripts from working until it's set to TRUE by SeamlessHelper.

global bool 22:no_scripts[];	//Tells most standard scripts like Air Dashes not to run.
global int 25:gamemode;	//0: Normal, 1: Time attack, 2: Boss rush, 3: Practice, 4: Wave-based battle
global int 27:upgrades[];	//Upgrades; 0: Hammer upgrades, 1: Max coins, 2: Umbrella, 3: Sword (Xane), 4: Ability upgrade. This is synced between all players.
global bool 29:tutorial_completed[];	//An array tracking which tutorials have been seen previously.

int tutorial_id[2] = { -1, -1 };	//The requested (0) and current (1) tutorial ID's.
int tutorial_text[30] = {	//What text ID each tutorial ID should start at.
0,	//0 (Special stages)
3,	//1 (Introduction to the Wanted Level)
6,	//2 (Wanted Level star pickups)
7,	//3 (ENEMY: Troll)
9,	//4 (ENEMY: Green cop)
11,	//5 (ENEMY: Yellow cop)
13,	//6 (Level goals)
17,	//7	(Bottomless pit death, unused)
18,	//8	(Arrested by HCPD)
19,	//9	(Cop dropped key)
20,	//10 (Wall jump)
23,	//11 (Key columns)
27,	//12 (Mary's umbrella and wind/air currents)
30,	//13 (Hammer Upgrade #1: Hammer Jump)
33,	//14 (Hammer Upgrade #2: Hammer Puff)
35,	//15 (Hammer Upgrade #3: Hammer Spin)
37,	//16 (Hammer Upgrade #4: Hammer Slam)
40,	//17 (Xane's Special Ability
42,	//18 (Obvious: Switches)
44,	//19 (Umbrella Upgrade #1: Flattener)
46,	//20 (Umbrella Upgrade #2: Liftoff)
48,	//21 (Xane's Claw)
50,	//22 (Soap Boxes)
53,	//23 (Special Stage water)
55,	//24 (Xane's Drop Dash)
58,	//25 (Mary's Air Dash)
0,	//26
0,	//27
0,	//28
0	//29
};

int tutorial_length[30] = {	//How many IDs of text should be shown in this tutorial.
3,	//0
3,	//1
1,	//2
2,	//3
2,	//4
2,	//5
4,	//6
1,	//7
1,	//8
1,	//9
3,	//10
4,	//11
3,	//12
3,	//13
2,	//14
2,	//15
3,	//16
2,	//17
2,	//18
2,	//19
2,	//20
2,	//21
3,	//22
2,	//23
3,	//24
1,	//25
0,	//26
0,	//27
0,	//28
0	//29
};

int tutorial_showmsg[30] = {	//Which special message to briefly display after a tutorial is finished.
0,	//0
0,	//1
0,	//2
0,	//3
0,	//4
0,	//5
0,	//6
0,	//7
0,	//8
0,	//9
0,	//10
2,	//11
1,	//12
3,	//13
4,	//14
5,	//15
6,	//16
8,	//17
7,	//18
9,	//19
10,	//20
11,	//21
0,	//22
0,	//23
12,	//24
13,	//25
0,	//26
0,	//27
0,	//28
0	//29
};

script "CheckTutorials" OPEN
{
	int waittics = 0, input_check, exvertical = 100;
	
	If(gamemode>0||GetCVAR("cl_demo")==TRUE) Terminate;	//If not in the campaign, don't show tutorials.
	
	int text_current;	//Current text ID.
	While(GetCVAR("xane_tutorials")==FALSE) Delay(35);	//If they don't need help, wait until they request it.
	
	Delay(1);
	Until(level_ready==TRUE) Delay(1);	//Wait for the signal first.

	While(1)
	{
		SetHUDSize(640,400,TRUE);
		
		Until(tutorial_id[0]!=-1) Delay(17);	//Wait until a tutorial's requested by the game.
		
		If(GetCVAR("xane_tutorials")==FALSE&&GetCVAR("xane_tutorialpause")==FALSE&&no_scripts[0]==FALSE) { tutorial_id[0] = -1; Restart; }	//If another screen is up or tutorials are disabled, ignore this request.
		
		If(tutorial_completed[tutorial_id[0]]==FALSE)
		{
			if(GetCVAR("xane_tutorials") || GetCVAR("xane_tutorialvoices"))
			{
				If(GetCVAR("xane_tutorialpause")==FALSE) { exvertical = 100;}	//Move the text box if pausing is off.
				Else
				{	//If pausing is on, only show the tutorial once the player is on the ground.
					Until(GetActorZ(0)-GetActorFloorZ(0)==0.0) Delay(1);
				}
				
				tutorial_completed[tutorial_id[0]] = TRUE;	//Mark the tutorial as completed.
				tutorial_id[1] = tutorial_id[0];	//Set the current tutorial ID.
				tutorial_id[0] = -1;
				text_current = tutorial_text[tutorial_id[1]];
				If(GetCVAR("xane_tutorialpause")==TRUE) no_scripts[0] = TRUE;	//Prevent other special screens from appearing.
				
				If(GetCVAR("xane_tutorialpause")==FALSE&&(tutorial_id[1]==13||tutorial_id[1]==14||tutorial_id[1]==15||tutorial_id[1]==16)) { UseInventory("MaryHammer"); GiveInventory("Mary_LookAtHammer", 1); }
				If(GetCVAR("xane_tutorialpause")==FALSE&&(tutorial_id[1]==19||tutorial_id[1]==20)) UseInventory("MaryUmbrella");
			}
			
			If(GetCVAR("xane_tutorialpause") && ( GetCVAR("xane_tutorials") || GetCVAR("xane_tutorialvoices") ) ) ACS_NamedExecuteAlways("PlayerMovement",0,TRUE,TRUE,TRUE);
			If(GetCVAR("xane_tutorialpause") && ( GetCVAR("xane_tutorials") || GetCVAR("xane_tutorialvoices") ) ) FadeTo(96, 72, 48, 0.5, 1.0);
			If(GetCVAR("xane_tutorials")) SetFont("TUTO_BOX");
			If(GetCVAR("xane_tutorials"))
			{
				If(GetCVAR("xane_tutorialpause")) { HUDMessageBold(s:"A";
					HUDMSG_FADEINOUT, 10, CR_UNTRANSLATED, 320.4, 200.0, 60.0, 1.0, 0.05); }
				Else { HUDMessageBold(s:"A";
					HUDMSG_FADEINOUT, 10, CR_UNTRANSLATED, 320.4, 275.0, 60.0, 1.0, 0.05); }
			}
				
			While(text_current<tutorial_text[tutorial_id[1]]+tutorial_length[tutorial_id[1]])
			{
				If(GetCVAR("xane_tutorials")) SetFont("3DLETTER");
				If(GetCVAR("xane_tutorials"))
				{
					If(GetCVAR("xane_tutorialpause")) { HUDMessageBold(l:StrParam(s:"TUT", d:text_current);
						HUDMSG_PLAIN|HUDMSG_LOG, 11, CR_YELLOW, 320.4, 200.0, 10.01); }
					Else  { HUDMessageBold(l:StrParam(s:"TUT", d:text_current);
						HUDMSG_PLAIN|HUDMSG_LOG, 11, CR_YELLOW, 320.4, 275.0, 10.01); }
				}
				
				If(GetCVAR("xane_tutorials"))
				{
					Delay(17);
					input_check = GetPlayerInput(0, INPUT_BUTTONS);
					
					Until(waittics>=333||input_check & BT_USE) { SetFont("UBUTTON1"); If(GetCVAR("xane_tutorialpause")) { HUDMessageBold(l:StrParam(s:"A"); HUDMSG_PLAIN, 0, CR_YELLOW, 650.4, 225.0, 0.08); no_scripts[0] = TRUE; } Else { HUDMessageBold(l:StrParam(s:"A"); HUDMSG_PLAIN, 0, CR_YELLOW, 650.4, 300.0, 0.08); } input_check = GetPlayerInput(0, INPUT_BUTTONS); waittics++; Delay(1); }
					
					waittics = 0;
				}
				text_current++;
				input_check = 0;
			}
				
			If(GetCVAR("xane_tutorialpause") && ( GetCVAR("xane_tutorials") || GetCVAR("xane_tutorialvoices") ) ) ACS_NamedExecuteAlways("PlayerMovement",0,FALSE,TRUE,TRUE);
			If(GetCVAR("xane_tutorialpause") && ( GetCVAR("xane_tutorials") || GetCVAR("xane_tutorialvoices") ) ) FadeTo(0, 0, 0, 0.0, 1.0);
			If(GetCVAR("xane_tutorials")) SetFont("TUTO_BOX");
			If(GetCVAR("xane_tutorials"))
				{
					If(GetCVAR("xane_tutorialpause")) { HUDMessageBold(s:"A";
						HUDMSG_FADEOUT, 10, CR_UNTRANSLATED, 320.4, 200.0, 0.0, 1.0); }
					Else { HUDMessageBold(s:"A";
						HUDMSG_FADEOUT, 10, CR_UNTRANSLATED, 320.4, 275.0, 0.0, 1.0); }
				}
			
			If(GetCVAR("xane_tutorials")) text_current--;	//Go back to the previous message before fading out the text.
			If(GetCVAR("xane_tutorials")) SetFont("3DLETTER");
			If(GetCVAR("xane_tutorials"))
				{
					If(GetCVAR("xane_tutorialpause")) { HUDMessageBold(l:StrParam(s:"TUT", d:text_current);
						HUDMSG_FADEOUT, 11, CR_YELLOW, 320.4, 200.0, 0.01); }
					Else { HUDMessageBold(l:StrParam(s:"TUT", d:text_current);
						HUDMSG_FADEOUT, 11, CR_YELLOW, 320.4, 275.0, 0.01); }
				}
			If(GetCVAR("xane_tutorialpause")==FALSE) no_scripts[0] = FALSE;	//Allow other screens.
			ChangeCamera(0,1,0);	//If something changed the camera view for this tutorial, switch it back to the player's camera.
			If(tutorial_showmsg[tutorial_id[1]]>0) { ACS_NamedExecuteAlways("ShowSTutMessage",0,tutorial_showmsg[tutorial_id[1]],0,0); }
			
			If(GetCVAR("xane_tutorialpause")==TRUE&&(tutorial_id[1]==13||tutorial_id[1]==14||tutorial_id[1]==15||tutorial_id[1]==16)) { UseInventory("MaryHammer"); GiveInventory("Mary_LookAtHammer", 1); }
			If(GetCVAR("xane_tutorialpause")==TRUE&&(tutorial_id[1]==19||tutorial_id[1]==20)) UseInventory("MaryUmbrella");
		}
		Else tutorial_id[0] = -1;
	}
}

script "ShowTutorial" (int id)
{
	if(GetCVAR("xane_tutorials")==FALSE) Terminate;
	
	tutorial_id[0] = id;
	
	Switch(id)	//Add camera views for level-specific one-time tutorials here.
	{
		Case 19:
			ChangeCamera(37,TRUE,FALSE);
			Delay(100);
			Thing_Activate(9);
			Delay(10);
			ChangeCamera(9,TRUE,FALSE);
			Delay(200);
			Thing_Deactivate(9);
		Break;
	}
}

script "ShowSTutMessage" (int id)
{
	int properties[5] = { 320.4, 250.0, 7.0, 0.25, 0.75 };	//X, Y, hold time, fade in, fade out
	SetHUDSize(640,400,TRUE);
	SetFont("3DLETTER");
	if(ACS_NamedExecuteWithResult("GetXProperty",XPROP_MOBILE,0,0,0)==FALSE)
	{
		Switch(id)
		{
			Case 1:
			HUDMessageBold(s:"Hold ", k:"+altattack", s:" to glide using Mary's Umbrella.";
				HUDMSG_FADEINOUT, 0, CR_UNTRANSLATED, properties[0], properties[1], properties[2], properties[3], properties[4]);
			Break;
			Case 2:
			HUDMessageBold(s:"Press ", k:"+use", s:" to open locked areas.";
				HUDMSG_FADEINOUT, 0, CR_UNTRANSLATED, properties[0], properties[1], properties[2], properties[3], properties[4]);
			Break;
			Case 3:
			HUDMessageBold(s:"Briefly push ", k:"+altattack", s:" to perform the Hammer Jump.";
				HUDMSG_FADEINOUT, 0, CR_UNTRANSLATED, properties[0], properties[1], properties[2], properties[3], properties[4]);
			Break;
			Case 4:
			HUDMessageBold(s:"Press ", k:"+altattack", s:" in mid-air to do a Hammer Puff.";
				HUDMSG_FADEINOUT, 0, CR_UNTRANSLATED, properties[0], properties[1], properties[2], properties[3], properties[4]);
			Break;
			Case 5:
			HUDMessageBold(s:"Hold ", k:"+altattack", s:" on the ground to perform Hammer Spin.";
				HUDMSG_FADEINOUT, 0, CR_UNTRANSLATED, properties[0], properties[1], properties[2], properties[3], properties[4]);
			Break;
			Case 6:
			HUDMessageBold(s:"In the air, push ", k:"+attack", s:" to do a Hammer Slam.";
				HUDMSG_FADEINOUT, 0, CR_UNTRANSLATED, properties[0], properties[1], properties[2], properties[3], properties[4]);
			Break;
			Case 7:
			HUDMessageBold(s:"Press ", k:"+use", s:" to activate switches.";
				HUDMSG_FADEINOUT, 0, CR_UNTRANSLATED, properties[0], properties[1], properties[2], properties[3], properties[4]);
			Break;
			Case 8:
			HUDMessageBold(s:"Press ", k:"+jump", s:" in the air to use your special ability.";
				HUDMSG_FADEINOUT, 0, CR_UNTRANSLATED, properties[0], properties[1], properties[2], properties[3], properties[4]);
			Break;
			Case 9:
			HUDMessageBold(s:"Hold ", k:"+attack", s:" after your normal umbrella attack to do a flatten attack.";
				HUDMSG_FADEINOUT, 0, CR_UNTRANSLATED, properties[0], properties[1], properties[2], properties[3], properties[4]);
			Break;
			Case 10:
			HUDMessageBold(s:"Hold ", k:"+altattack", s:" on the ground and Mary will lift off!";
				HUDMSG_FADEINOUT, 0, CR_UNTRANSLATED, properties[0], properties[1], properties[2], properties[3], properties[4]);
			Break;
			Case 11:
			HUDMessageBold(s:"Double-push ", k:"+use", s:" on the ground to fire Xane's claw.";
				HUDMSG_FADEINOUT, 0, CR_UNTRANSLATED, properties[0], properties[1], properties[2], properties[3], properties[4]);
			Break;
			Case 12:
			HUDMessageBold(s:"Double-push ", k:"+use", s:" in the air to start a Drop Dash.";
				HUDMSG_FADEINOUT, 0, CR_UNTRANSLATED, properties[0], properties[1], properties[2], properties[3], properties[4]);
			Break;
			Case 13:
			HUDMessageBold(s:"Push ", k:"+jump", s:" in the air to perform the Air Dash.";
				HUDMSG_FADEINOUT, 0, CR_UNTRANSLATED, properties[0], properties[1], properties[2], properties[3], properties[4]);
			Break;
		}
	}
	Else
	{
		Switch(id)
		{
			Case 1:
			HUDMessageBold(s:"Hold ALT. ATTACK to glide using Mary's Umbrella.";
				HUDMSG_FADEINOUT, 0, CR_UNTRANSLATED, properties[0], properties[1], properties[2], properties[3], properties[4]);
			Break;
			Case 2:
			HUDMessageBold(s:"Tap the USE button to open locked areas.";
				HUDMSG_FADEINOUT, 0, CR_UNTRANSLATED, properties[0], properties[1], properties[2], properties[3], properties[4]);
			Break;
			Case 3:
			HUDMessageBold(s:"Briefly tap ALT. ATTACK to perform the Hammer Jump.";
				HUDMSG_FADEINOUT, 0, CR_UNTRANSLATED, properties[0], properties[1], properties[2], properties[3], properties[4]);
			Break;
			Case 4:
			HUDMessageBold(s:"Tap the ALT. ATTACK button in mid-air to do a Hammer Puff.";
				HUDMSG_FADEINOUT, 0, CR_UNTRANSLATED, properties[0], properties[1], properties[2], properties[3], properties[4]);
			Break;
			Case 5:
			HUDMessageBold(s:"Hold ALT. ATTACK on the ground to perform Hammer Spin.";
				HUDMSG_FADEINOUT, 0, CR_UNTRANSLATED, properties[0], properties[1], properties[2], properties[3], properties[4]);
			Break;
			Case 6:
			HUDMessageBold(s:"In the air, tap the ATTACK button to do a Hammer Slam.";
				HUDMSG_FADEINOUT, 0, CR_UNTRANSLATED, properties[0], properties[1], properties[2], properties[3], properties[4]);
			Break;
			Case 7:
			HUDMessageBold(s:"Tap the USE button to activate switches.";
				HUDMSG_FADEINOUT, 0, CR_UNTRANSLATED, properties[0], properties[1], properties[2], properties[3], properties[4]);
			Break;
			Case 8:
			HUDMessageBold(s:"Tap the JUMP button in the air to use your special ability.";
				HUDMSG_FADEINOUT, 0, CR_UNTRANSLATED, properties[0], properties[1], properties[2], properties[3], properties[4]);
			Break;
			Case 9:
			HUDMessageBold(s:"Hold the ATTACK button after your normal umbrella attack to do a flatten attack.";
				HUDMSG_FADEINOUT, 0, CR_UNTRANSLATED, properties[0], properties[1], properties[2], properties[3], properties[4]);
			Break;
			Case 10:
			HUDMessageBold(s:"Hold ALT. ATTACK on the ground and Mary will lift off!";
				HUDMSG_FADEINOUT, 0, CR_UNTRANSLATED, properties[0], properties[1], properties[2], properties[3], properties[4]);
			Break;
			Case 11:
			HUDMessageBold(s:"Double-tap the USE button on the ground to fire Xane's claw.";
				HUDMSG_FADEINOUT, 0, CR_UNTRANSLATED, properties[0], properties[1], properties[2], properties[3], properties[4]);
			Break;
			Case 11:
			HUDMessageBold(s:"Double-tap the USE button in the air to start a Drop Dash.";
				HUDMSG_FADEINOUT, 0, CR_UNTRANSLATED, properties[0], properties[1], properties[2], properties[3], properties[4]);
			Break;
		}
	}
}

script "CheckSignValidity" (int tut_id)
{	//Used by signs to determine if they should appear or not.
	If(tutorial_completed[tut_id]==FALSE&&GetCVAR("xane_tutorials")==TRUE&&gamemode==0) SetResultValue(TRUE);
	Else SetResultValue(FALSE);
}

Script "ShowUpgradeTutorial" (int which)
{
	If(which==0) tutorial_id[0] = 13 + upgrades[0];	//Hammer
	If(which==1) tutorial_id[0] = 19 + upgrades[2];	//Umbrella
}