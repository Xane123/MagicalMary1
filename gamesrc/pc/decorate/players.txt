actor NoWall : Inventory { Inventory.MaxAmount 1 }				//Indicates if Mary/Xane should fall off the wall they're holding onto.
actor Weakness : Inventory { Inventory.MaxAmount 1 }			//Used by enemies to detect when hit during their weak moment.
actor DisableAirDash : Inventory { Inventory.MaxAmount 1 }		//Disables Mary's Air Dash.
actor FloorDetected : Inventory { Inventory.MaxAmount 1 }		//Used by a script. Is "1" if "on ground", 0 otherwise.
actor NearFloor : Inventory { Inventory.MaxAmount 1 }	//Set by script; Is "1" if below a certain distance above the ground, 256 for Mary and 384 for Xane.
actor BounceRequested : Inventory { Inventory.MaxAmount 1 }		//Indicates an enemy bounce is requested; This doesn't do the bounce itself.
actor NoHammer : Inventory { Inventory.MaxAmount 1 }			//Unknown. Identify what this does!
actor Health125 : Inventory { Inventory.MaxAmount 1 }			//For SBARINFO's status bar.
actor ScoreX : Inventory { Inventory.MaxAmount 32767 }			//Points awarded from monsters; Combo-multiplied.
actor CoinLimit : Inventory { Inventory.MaxAmount 900 }			//Maximum coins holdable
actor IncreaseCombo : Inventory { Inventory.MaxAmount 3 }		//Request to increase the player's combo. Given by enemies when killed usually.
actor SSRequiredCoins : Inventory { Inventory.MaxAmount 999 }	//How many coins are required for the current Special Stage.

//These inventory items make the player character jump to a certain animation/state.
//1 - Ability (Air Dash for Mary, nothing for Xane yet.)
//2 - Crying (Mary)/Claw (Xane)
actor Animation1 : Inventory { Inventory.MaxAmount 1 }
actor Animation2 : Inventory { Inventory.MaxAmount 1 }

actor WallCheck
{
Radius 2
Height 4
Speed 4
PROJECTILE
States
{
Spawn:
TNT1 A 0
TNT1 A 1
TNT1 A 1 A_GiveInventory("Weakness",1)
Death:
TNT1 D 3 A_JumpIfInventory("Weakness",1,"GiveToken")
Goto CheckDrop
FadeOut:
TNT1 A 1 A_FadeOut(0.5,1)
Loop
CheckDrop:
TNT1 A 0 A_JumpIf(z-floorz<24.0,"GiveToken")
Goto FadeOut
GiveToken:
TNT1 A 2 A_GiveInventory("NoWall",1,AAPTR_MASTER)
Goto FadeOut	
}
}

Actor MaryTest
{
Radius 12
Height 48
Scale 1.5
+SOLID
+INVULNERABLE
States
{
	Spawn:
	TEST A -1
	Stop
}
}

actor StarA
{
+NOINTERACTION
States
{
Spawn:
STAR A 0
STAR A 1
FadeOut:
TNT1 A 1 A_FadeOut(0.5,1)
Loop
}
}
	//2015 is available. Use it for the scripted random upgrade spawner.

actor PowerupWRandom
{
Radius 8
Height 16
+NOGRAVITY
States
{
Spawn:
TNT1 A 0
TNT1 A 0 ACS_NamedExecuteAlways("DetermineWUpgradeSpawn",0,FALSE,0,0)
TNT1 A 5
Stop
}
}

actor PowerupHammer : CustomInventory
{
+FLOATBOB
+NOGRAVITY
+INVENTORY.AUTOACTIVATE
Inventory.PickupMessage "Your hammer has been upgraded!"
Inventory.Amount 1
Inventory.MaxAmount 1
States
{
Spawn:
ITEM A 0
ITEM A 0 A_ChangeVelocity(0,0,24,CVF_REPLACE)
ITEM A 1
ITEM A 0 A_ChangeVelocity(0,0,0,CVF_REPLACE)
ITEM A -1
Stop
Pickup:
TNT1 A 0
TNT1 A 0 A_TakeInventory("PowerupHammer",1)
TNT1 A 0 ACS_NamedExecuteAlways("GiveUpgrade",0,0,1,1)	//Give all players a hammer upgrade.
TNT1 A 0 ACS_NamedExecuteAlways("ShowUpgradeTutorial",0,0,0,0)	
Stop
}
}

actor PowerupUmbrella : CustomInventory
{
+FLOATBOB
+NOGRAVITY
+INVENTORY.AUTOACTIVATE
Inventory.PickupMessage "Your umbrella has been upgraded!"
Inventory.Amount 1
Inventory.MaxAmount 1
States
{
Spawn:
ITEM B 0
ITEM B 0 A_ChangeVelocity(0,0,24,CVF_REPLACE)
ITEM B 1
ITEM B 0 A_ChangeVelocity(0,0,0,CVF_REPLACE)
ITEM B -1
Stop
Pickup:
TNT1 A 0
TNT1 A 0 A_TakeInventory("PowerupUmbrella",1)
TNT1 A 0 ACS_NamedExecuteAlways("GiveUpgrade",0,2,1,1)	//Give all players a umbrella upgrade.
TNT1 A 0 ACS_NamedExecuteAlways("ShowUpgradeTutorial",0,1,0,0)	
Stop
}
}

actor PowerupSword : CustomInventory
{
+FLOATBOB
+NOGRAVITY
+INVENTORY.AUTOACTIVATE
Inventory.PickupMessage "Your sword has been upgraded!"
Inventory.Amount 1
Inventory.MaxAmount 1
States
{
Spawn:
ITEM D 0
ITEM D 0 A_ChangeVelocity(0,0,24,CVF_REPLACE)
ITEM D 1
ITEM D 0 A_ChangeVelocity(0,0,0,CVF_REPLACE)
ITEM D -1
Stop
Pickup:
TNT1 A 0
TNT1 A 0 A_TakeInventory("PowerupUmbrella",1)
TNT1 A 0 ACS_NamedExecuteAlways("GiveUpgrade",0,3,1,1)	//Give all players a umbrella upgrade.
TNT1 A 0 //ACS_NamedExecuteAlways("ShowUpgradeTutorial",0,1,0,0)	
Stop
}
}

ACTOR LGirlPlayer : DoomPlayer
{
  Speed 1.05
  Scale 1.5
  Health 100
  Player.MaxHealth 100
  Radius 16
  Height 44
  Mass 65
  Player.ViewHeight 37
  PainChance 255
  Player.ForwardMove 1.3 1.1
  Player.SideMove 0.85 0.675
  Player.JumpZ 4.75
  Player.UseRange 48
  Player.SoundClass "lgirl"
  Player.DisplayName "Mary"
  Player.StartItem "MaryUmbrella"
  Player.StartItem "MaryHammer"
  Player.StartItem "MaryWand"
  Player.Portrait "BIGPGIRL"
  Player.ScoreIcon "CPRVA0"
  Player.WeaponSlot 1, "MaryUmbrella"
  Player.WeaponSlot 2, "MaryHammer"
  Player.WeaponSlot 3, "MaryWand"
  Player.ColorRange 32, 39
  DamageFactor "Bounce", 0.0

  Player.ColorSet 0, "Lilac", 0x50, 0x57, 0x54
  Player.ColorSet 1, "Sky", 0xB6, 0xC4, 0xCB	
  Player.ColorSet 2, "Pumpkin", 0x08, 0x0F, 0x0B

  States
  {
  Spawn:
	MARY A 0
	MARY A 0 A_RadiusGive("ProjectilePlayers",192,RGF_MONSTERS)
	MARY A 0 A_JumpIfInventory("ForceFlatten",1,"Pain.Flatten")
	MARY A 0 A_JumpIfInventory("Animation2",1,"CryLoop")
	MARY A 0 A_JumpIfInventory("Animation1",1,"AirDash")
    MARY A 7 //A_Jump(24,"Blink")
	MARY A 0 A_JumpIf(max(abs(velx),abs(vely))<3,"Spawn")	//Slowest
	MARY A 0 A_JumpIf(max(abs(velx),abs(vely))<11,"See5")	//Slow
	MARY A 0 A_JumpIf(max(abs(velx),abs(vely))<19,"See3")	//Medium
	MARY A 0 A_JumpIf(max(abs(velx),abs(vely))>=19,"SeeFast")	//Fast
	//MARY A 0 A_CheckFloor("AllowJumpsIdle")
    Loop
  Blink:
	MARY A 0 A_JumpIfInventory("Animation2",1,"CryLoop")
	MARY A 0 A_JumpIfInventory("Animation1",1,"AirDash")
	MARY B 6 A_RadiusGive("ProjectilePlayers",192,RGF_MONSTERS)
	MARY A 0 A_CheckFloor("AllowJumpsIdle")
	Goto Spawn
  AllowJumpsIdle:
	MARY D 0 A_TakeInventory("Jumps",10)
	MARY D 0 ACS_ExecuteAlways(66,0,0,0,0)
	Goto Spawn
  See:
	MARY A 0 A_JumpIfInventory("Animation2",1,"CryLoop")
	MARY A 0 A_JumpIfInventory("Animation1",1,"AirDash")
	MARY A 0 A_RadiusGive("ProjectilePlayers",192,RGF_MONSTERS)
	MARY A 0 A_GiveInventory("SpeedTrailX",1)
	MARY A 0 A_JumpIfInventory("ForceFlatten",1,"Pain.Flatten")
	MARY A 0 A_JumpIfInventory("Weakness",1,"Insult")
	MARY A 0 A_JumpIf(max(abs(velx),abs(vely))<3,"Spawn")	//Slowest
	MARY A 0 A_JumpIf(max(abs(velx),abs(vely))<11,"See5")	//Slow
	MARY A 0 A_JumpIf(max(abs(velx),abs(vely))<19,"See3")	//Medium
  SeeFast:
	MARY A 0 A_JumpIfInventory("Animation2",1,"CryLoop")
	MARY A 0 A_JumpIfInventory("Animation1",1,"AirDash")
	MARY A 0 A_RadiusGive("ProjectilePlayers",192,RGF_MONSTERS)
    MARY IJKJ 1 A_SpawnItemEx("MaryAirDash",4,0,2,-8,0,0,0,SXF_SETMASTER|SXF_NOCHECKPOSITION,0)	//Fastest
	MARY H 0 A_CheckFloor("AllowJumps")
  See2:
	MARY A 0 A_JumpIfInventory("Animation2",1,"CryLoop")
	MARY A 0 A_JumpIfInventory("Animation1",1,"AirDash")
	MARY A 0 A_RadiusGive("ProjectilePlayers",192,RGF_MONSTERS)
	MARY IMNM 1 A_SpawnItemEx("MaryAirDash",4,0,2,-8,0,0,0,SXF_SETMASTER|SXF_NOCHECKPOSITION,0)	//Fastest
	MARY B 0 A_CheckFloor("AllowJumpsEnd")
	Goto See
	
  See3:
	MARY A 0 A_JumpIfInventory("Animation2",1,"CryLoop")
	MARY A 0 A_JumpIfInventory("Animation1",1,"AirDash")
    MARY IJKJ 2 A_RadiusGive("ProjectilePlayers",192,RGF_MONSTERS)
	MARY H 0 A_CheckFloor("AllowJumps")
  See4:
	MARY A 0 A_JumpIfInventory("Animation2",1,"CryLoop")
	MARY A 0 A_JumpIfInventory("Animation1",1,"AirDash")
	MARY IMNM 2 A_RadiusGive("ProjectilePlayers",192,RGF_MONSTERS)
	MARY B 0 A_CheckFloor("AllowJumpsEnd")
	Goto See

  See5:
	MARY A 0 A_JumpIfInventory("Animation2",1,"CryLoop")
	MARY A 0 A_JumpIfInventory("Animation1",1,"AirDash")
    MARY CDED 4 A_RadiusGive("ProjectilePlayers",192,RGF_MONSTERS)
	MARY H 0 A_CheckFloor("AllowJumps")
  See6:
	MARY A 0 A_JumpIfInventory("Animation2",1,"CryLoop")
	MARY A 0 A_JumpIfInventory("Animation1",1,"AirDash")
	MARY CGHG 4 A_RadiusGive("ProjectilePlayers",192,RGF_MONSTERS)
	MARY B 0 A_CheckFloor("AllowJumpsEnd")
	Goto See

  AirDash:
  	MARY O 0 A_TakeInventory("SpeedTrailX",10)
	MARY O 0 A_SpawnItemEx("MaryAirDash",4,0,2,-8,0,0,0,SXF_SETMASTER|SXF_NOCHECKPOSITION,0)
	MARY O 0 A_CheckFloor("AirDashLand")
	MARY O 1 A_JumpIf(velz==0.0,"AirDashLand")
	Loop
  AirDashLand:
	MARY O 0 A_TakeInventory("Animation1",1)
	Goto See

  WallJump:
	MARY C 0 A_RadiusGive("ProjectilePlayers",192,RGF_MONSTERS)
	MARY C 3 A_SpawnItemEx("WallCheck",0,0,0,-12,0,0,0,SXF_SETMASTER|SXF_NOCHECKPOSITION,0)
	Loop
  WJDetect:	//Initial detection used as a last check beore "sticking" the player to a wall.
	MARY C 0
	MARY C 0 A_SpawnItemEx("WallCheck",0,0,0,12,0,0,0,SXF_SETMASTER|SXF_NOCHECKPOSITION,0)
	Goto See
  EndWallJump:
	MARY B 1 A_KillChildren("Normal")
	MARY A 1 A_TakeInventory("NoWall",1)
	Goto See
  Melee:
  Missile:
	MARY A 0 A_JumpIfInventory("Animation2",1,"CryLoop")
	MARY A 0 A_JumpIfInventory("Animation1",1,"AirDash")
	MARY Q 2
	MARY A 0 A_JumpIfInventory("Animation2",1,"CryLoop")
	MARY A 0 A_JumpIfInventory("Animation1",1,"AirDash")
	MARY R 4
    Goto Spawn
  Pain:
	MARY A 0 A_JumpIfInventory("Animation2",1,"CryLoop")
	MARY A 0 A_JumpIfInventory("Animation1",1,"AirDash")
	MARY P 1
	MARY P 0 //A_SpawnItem("HurtMonster",64,32)
    //MARY P 0 A_JumpIf(waterlevel==0,"Pain2")
    Goto Spawn
  Pain.Stun:
    MARY I 0 A_Pain
	MARY IJKLMLMLMLMLMLMLMLMLKJI 1 { A_ChangeVelocity(velx/64,vely/64,-8,CVF_REPLACE); A_RadiusGive("ProjectilePlayers",192,RGF_MONSTERS); }
	Goto Spawn
  Pain.Flatten:
	MARY P 0 A_ChangeFlag("NOPAIN",TRUE)
	MARY P 0 A_ChangeFlag("INVULNERABLE",FALSE)
	MARY P 0 A_Pain
	MARY P 0 A_DamageSelf(5)
	MARY P 0 A_DamageSelf(2,"Flatten")
	MARY P 1 A_SetScale(1.33,1.33)
	MARY P 0 A_ChangeVelocity(0.0,0.0,-6,CVF_REPLACE)
	MARY P 1 A_SetScale(scalex,scaley-0.01)
	MARY P 0 A_ChangeVelocity(0.0,0.0,-6,CVF_REPLACE)
	MARY P 1 A_SetScale(scalex,scaley-0.02)
	MARY P 0 A_ChangeVelocity(0.0,0.0,-6,CVF_REPLACE)
	MARY P 1 A_SetScale(scalex,scaley-0.02)
	MARY P 0 A_ChangeVelocity(0.0,0.0,-6,CVF_REPLACE)
	MARY P 1 A_SetScale(scalex,scaley-0.02)
	MARY P 0 A_ChangeVelocity(0.0,0.0,-6,CVF_REPLACE)
	MARY P 1 A_SetScale(scalex,scaley-0.01)
	MARY P 0 A_ChangeVelocity(0.0,0.0,-6,CVF_REPLACE)
	MARY P 1 A_RadiusGive("ProjectilePlayers",192,RGF_MONSTERS)
	MARY P 0 A_ChangeVelocity(0.0,0.0,-6,CVF_REPLACE)
	MARY P 1 A_RadiusGive("ProjectilePlayers",192,RGF_MONSTERS)
	MARY P 0 A_ChangeVelocity(0.0,0.0,-6,CVF_REPLACE)
	MARY P 1 A_RadiusGive("ProjectilePlayers",192,RGF_MONSTERS)
	MARY P 0 A_ChangeVelocity(0.0,0.0,-6,CVF_REPLACE)
	MARY P 1 A_RadiusGive("ProjectilePlayers",192,RGF_MONSTERS)
	MARY P 0 A_ChangeVelocity(0.0,0.0,-6,CVF_REPLACE)
	MARY P 1 A_RadiusGive("ProjectilePlayers",192,RGF_MONSTERS)
	MARY P 0 A_ChangeVelocity(0.0,0.0,-6,CVF_REPLACE)
	MARY P 1 A_RadiusGive("ProjectilePlayers",192,RGF_MONSTERS)
	MARY P 0 A_ChangeVelocity(0.0,0.0,-6,CVF_REPLACE)
	MARY P 1 A_RadiusGive("ProjectilePlayers",192,RGF_MONSTERS)
	MARY P 0 A_ChangeVelocity(0.0,0.0,-6,CVF_REPLACE)
	MARY P 1 A_RadiusGive("ProjectilePlayers",192,RGF_MONSTERS)
	MARY P 0 A_ChangeVelocity(0.0,0.0,-6,CVF_REPLACE)
	MARY P 1 A_RadiusGive("ProjectilePlayers",192,RGF_MONSTERS)
	MARY P 0 A_ChangeVelocity(0.0,0.0,-6,CVF_REPLACE)
	MARY P 1 A_RadiusGive("ProjectilePlayers",192,RGF_MONSTERS)
	MARY P 0 A_ChangeVelocity(0.0,0.0,-6,CVF_REPLACE)
	MARY P 1 A_RadiusGive("ProjectilePlayers",192,RGF_MONSTERS)
	MARY P 0 A_ChangeVelocity(0.0,0.0,-6,CVF_REPLACE)
	MARY P 1 A_RadiusGive("ProjectilePlayers",192,RGF_MONSTERS)
	MARY P 0 A_ChangeVelocity(0.0,0.0,-6,CVF_REPLACE)
	MARY P 1 A_RadiusGive("ProjectilePlayers",192,RGF_MONSTERS)
	MARY P 0 A_ChangeVelocity(0.0,0.0,-6,CVF_REPLACE)
	MARY P 1 A_RadiusGive("ProjectilePlayers",192,RGF_MONSTERS)
	MARY P 0 A_ChangeVelocity(0.0,0.0,-6,CVF_REPLACE)
	MARY P 1 A_RadiusGive("ProjectilePlayers",192,RGF_MONSTERS)
	MARY P 0 A_ChangeVelocity(0.0,0.0,-6,CVF_REPLACE)
	MARY P 1 A_RadiusGive("ProjectilePlayers",192,RGF_MONSTERS)
	MARY P 0 A_ChangeVelocity(0.0,0.0,-6,CVF_REPLACE)
	MARY P 1 A_RadiusGive("ProjectilePlayers",192,RGF_MONSTERS)
	MARY P 0 A_ChangeVelocity(0.0,0.0,-6,CVF_REPLACE)
	MARY P 1 A_RadiusGive("ProjectilePlayers",192,RGF_MONSTERS)
	MARY P 0 A_ChangeVelocity(0.0,0.0,-6,CVF_REPLACE)
	MARY P 1 A_RadiusGive("ProjectilePlayers",192,RGF_MONSTERS)
	MARY P 0 A_ChangeVelocity(0.0,0.0,-6,CVF_REPLACE)
	MARY P 1 A_RadiusGive("ProjectilePlayers",192,RGF_MONSTERS)
	MARY P 0 A_ChangeVelocity(0.0,0.0,-6,CVF_REPLACE)
	MARY P 1 A_RadiusGive("ProjectilePlayers",192,RGF_MONSTERS)
	MARY P 0 A_ChangeVelocity(0.0,0.0,-6,CVF_REPLACE)
	MARY P 1 A_RadiusGive("ProjectilePlayers",192,RGF_MONSTERS)
	MARY P 0 A_ChangeVelocity(0.0,0.0,-6,CVF_REPLACE)
	MARY P 1 A_RadiusGive("ProjectilePlayers",192,RGF_MONSTERS)
	MARY P 0 A_ChangeVelocity(0.0,0.0,-6,CVF_REPLACE)
	MARY P 1 A_RadiusGive("ProjectilePlayers",192,RGF_MONSTERS)
	MARY P 0 A_ChangeVelocity(0.0,0.0,-6,CVF_REPLACE)
	MARY P 1 A_RadiusGive("ProjectilePlayers",192,RGF_MONSTERS)
	MARY P 0 A_ChangeVelocity(0.0,0.0,-6,CVF_REPLACE)
	MARY P 1 A_RadiusGive("ProjectilePlayers",192,RGF_MONSTERS)
	MARY P 0 A_ChangeVelocity(0.0,0.0,-6,CVF_REPLACE)
	MARY P 1 A_RadiusGive("ProjectilePlayers",192,RGF_MONSTERS)
	MARY P 0 A_ChangeVelocity(0.0,0.0,-6,CVF_REPLACE)
	MARY P 1 A_RadiusGive("ProjectilePlayers",192,RGF_MONSTERS)
	MARY P 0 A_ChangeVelocity(0.0,0.0,-6,CVF_REPLACE)
	MARY P 1 A_RadiusGive("ProjectilePlayers",192,RGF_MONSTERS)
	MARY P 0 A_ChangeVelocity(0.0,0.0,-6,CVF_REPLACE)
	MARY P 1 A_RadiusGive("ProjectilePlayers",192,RGF_MONSTERS)
	MARY P 0 A_ChangeVelocity(0.0,0.0,-6,CVF_REPLACE)
	MARY P 1 A_RadiusGive("ProjectilePlayers",192,RGF_MONSTERS)
	MARY P 0 A_ChangeVelocity(0.0,0.0,-6,CVF_REPLACE)
	MARY P 1 A_RadiusGive("ProjectilePlayers",192,RGF_MONSTERS)
	MARY P 0 A_ChangeVelocity(0.0,0.0,-6,CVF_REPLACE)
	MARY P 1 A_RadiusGive("ProjectilePlayers",192,RGF_MONSTERS)
	MARY P 0 A_ChangeVelocity(0.0,0.0,-6,CVF_REPLACE)
	MARY P 1 A_RadiusGive("ProjectilePlayers",192,RGF_MONSTERS)
	MARY P 0 A_ChangeVelocity(0.0,0.0,-6,CVF_REPLACE)
	MARY P 1 A_RadiusGive("ProjectilePlayers",192,RGF_MONSTERS)
	MARY P 0 A_ChangeVelocity(0.0,0.0,-6,CVF_REPLACE)
	MARY P 1 A_RadiusGive("ProjectilePlayers",192,RGF_MONSTERS)
	MARY P 0 A_ChangeVelocity(0.0,0.0,-6,CVF_REPLACE)
	MARY P 1 A_RadiusGive("ProjectilePlayers",192,RGF_MONSTERS)
	MARY P 0 A_ChangeVelocity(0.0,0.0,-6,CVF_REPLACE)
	MARY P 1 A_RadiusGive("ProjectilePlayers",192,RGF_MONSTERS)
	MARY P 0 A_ChangeVelocity(0.0,0.0,-6,CVF_REPLACE)
	MARY P 1 A_RadiusGive("ProjectilePlayers",192,RGF_MONSTERS)
	MARY P 0 A_ChangeVelocity(0.0,0.0,-6,CVF_REPLACE)
	MARY P 1 A_RadiusGive("ProjectilePlayers",192,RGF_MONSTERS)
	MARY P 0 A_ChangeVelocity(0.0,0.0,-6,CVF_REPLACE)
	MARY P 1 A_RadiusGive("ProjectilePlayers",192,RGF_MONSTERS)
	MARY P 0 A_ChangeVelocity(0.0,0.0,-6,CVF_REPLACE)
	MARY P 1 A_RadiusGive("ProjectilePlayers",192,RGF_MONSTERS)
	MARY P 0 A_ChangeVelocity(0.0,0.0,-6,CVF_REPLACE)
	MARY P 1 A_RadiusGive("ProjectilePlayers",192,RGF_MONSTERS)
	MARY P 0 A_ChangeVelocity(0.0,0.0,-6,CVF_REPLACE)
	MARY P 1 A_RadiusGive("ProjectilePlayers",192,RGF_MONSTERS)
	MARY P 0 A_ChangeVelocity(0.0,0.0,-6,CVF_REPLACE)
	MARY P 1 A_RadiusGive("ProjectilePlayers",192,RGF_MONSTERS)
	MARY P 0 A_ChangeVelocity(0.0,0.0,-6,CVF_REPLACE)
	MARY P 1 A_RadiusGive("ProjectilePlayers",192,RGF_MONSTERS)
	MARY P 0 A_ChangeVelocity(0.0,0.0,-6,CVF_REPLACE)
	MARY P 1 A_RadiusGive("ProjectilePlayers",192,RGF_MONSTERS)
	MARY P 0 A_ChangeVelocity(0.0,0.0,-6,CVF_REPLACE)
	MARY P 1 A_RadiusGive("ProjectilePlayers",192,RGF_MONSTERS)
	MARY P 0 A_ChangeVelocity(0.0,0.0,-6,CVF_REPLACE)
	MARY P 1 A_RadiusGive("ProjectilePlayers",192,RGF_MONSTERS)
	MARY P 0 A_ChangeVelocity(0.0,0.0,-6,CVF_REPLACE)
	MARY P 1 A_RadiusGive("ProjectilePlayers",192,RGF_MONSTERS)
	MARY P 0 A_ChangeVelocity(0.0,0.0,-6,CVF_REPLACE)
	MARY P 1 A_RadiusGive("ProjectilePlayers",192,RGF_MONSTERS)
	MARY P 0 A_ChangeVelocity(0.0,0.0,-6,CVF_REPLACE)
	MARY P 1 A_RadiusGive("ProjectilePlayers",192,RGF_MONSTERS)
	MARY P 0 A_ChangeVelocity(0.0,0.0,-6,CVF_REPLACE)
	MARY P 1 A_RadiusGive("ProjectilePlayers",192,RGF_MONSTERS)
	MARY P 0 A_ChangeVelocity(0.0,0.0,-6,CVF_REPLACE)
	MARY P 1 A_RadiusGive("ProjectilePlayers",192,RGF_MONSTERS)
	MARY P 0 A_ChangeVelocity(0.0,0.0,-6,CVF_REPLACE)
	MARY P 1 A_RadiusGive("ProjectilePlayers",192,RGF_MONSTERS)
	MARY P 0 A_ChangeVelocity(0.0,0.0,-6,CVF_REPLACE)
	MARY P 1 A_RadiusGive("ProjectilePlayers",192,RGF_MONSTERS)
	MARY P 0 A_ChangeVelocity(0.0,0.0,-6,CVF_REPLACE)
	MARY P 1 A_RadiusGive("ProjectilePlayers",192,RGF_MONSTERS)
	MARY P 0 A_ChangeVelocity(0.0,0.0,-6,CVF_REPLACE)
	MARY P 1 A_RadiusGive("ProjectilePlayers",192,RGF_MONSTERS)
	MARY P 0 A_ChangeVelocity(0.0,0.0,-6,CVF_REPLACE)
	MARY P 1 A_RadiusGive("ProjectilePlayers",192,RGF_MONSTERS)
	MARY P 0 A_ChangeVelocity(0.0,0.0,-6,CVF_REPLACE)
	MARY P 1 A_RadiusGive("ProjectilePlayers",192,RGF_MONSTERS)
	MARY P 0 A_ChangeVelocity(0.0,0.0,-6,CVF_REPLACE)
	MARY P 1 A_RadiusGive("ProjectilePlayers",192,RGF_MONSTERS)
	MARY P 0 A_ChangeVelocity(0.0,0.0,-6,CVF_REPLACE)
	MARY P 1 A_RadiusGive("ProjectilePlayers",192,RGF_MONSTERS)
	MARY P 0 A_ChangeVelocity(0.0,0.0,-6,CVF_REPLACE)
	MARY P 1 A_RadiusGive("ProjectilePlayers",192,RGF_MONSTERS)
	MARY P 0 A_ChangeVelocity(0.0,0.0,-6,CVF_REPLACE)
	MARY P 1 A_RadiusGive("ProjectilePlayers",192,RGF_MONSTERS)
	MARY P 0 A_ChangeVelocity(0.0,0.0,-6,CVF_REPLACE)
	MARY P 1 A_RadiusGive("ProjectilePlayers",192,RGF_MONSTERS)
	MARY P 0 A_ChangeVelocity(0.0,0.0,-6,CVF_REPLACE)
	MARY P 1 A_RadiusGive("ProjectilePlayers",192,RGF_MONSTERS)
	MARY P 0 A_ChangeVelocity(0.0,0.0,-6,CVF_REPLACE)
	MARY P 1 A_RadiusGive("ProjectilePlayers",192,RGF_MONSTERS)
	MARY P 0 A_ChangeVelocity(0.0,0.0,-6,CVF_REPLACE)
	MARY P 1 A_RadiusGive("ProjectilePlayers",192,RGF_MONSTERS)
	MARY P 1 A_SetScale(scalex,scaley+0.01)
	MARY P 0 A_ChangeVelocity(0.0,0.0,-6,CVF_REPLACE)
	MARY P 1 A_SetScale(scalex,scaley+0.02)
	MARY P 0 A_ChangeVelocity(0.0,0.0,-6,CVF_REPLACE)
	MARY P 1 A_SetScale(scalex,scaley+0.02)
	MARY P 0 A_ChangeVelocity(0.0,0.0,-6,CVF_REPLACE)
	MARY P 1 A_SetScale(scalex,scaley+0.02)
	MARY P 0 A_ChangeVelocity(0.0,0.0,-6,CVF_REPLACE)
	MARY P 1 A_SetScale(scalex,scaley+0.01)
	MARY P 0 A_ChangeVelocity(0.0,0.0,-6,CVF_REPLACE)
	MARY P 1 A_SetScale(scalex,scaley+0.005)
	MARY P 0 A_ChangeVelocity(0.0,0.0,-6,CVF_REPLACE)
	MARY P 2 A_SetScale(scalex,scaley+0.0025)
	MARY P 0 A_ChangeVelocity(0.0,0.0,-6,CVF_REPLACE)
	MARY P 1 A_SetScale(scalex,scaley-0.0025)
	MARY P 0 A_ChangeVelocity(0.0,0.0,-6,CVF_REPLACE)
	MARY P 1 A_SetScale(scalex,scaley-0.005)
	MARY P 0 A_TakeInventory("ForceFlatten",1)
	MARY P 0 A_ChangeFlag("NOPAIN",FALSE)
	Goto See
  Pain.AirDash:
	"####" "#" 0 A_FaceTarget
	"####" "#" 0 A_ChangeVelocity(-25.5,Random(-0.5,0.5),12.5,CVF_REPLACE|CVF_RELATIVE)
	Goto Pain
  Insult:
	MARY A 0 A_TakeInventory("Weakness",1)
	MARY A 0 A_Log("Insulted enemy!")//ACS_ExecuteAlways(64,0,0,0,0)
	Goto Spawn
  Pain2:
	MARY P 0 A_Pain
	MARY P 2 A_RadiusGive("ProjectilePlayers",192,RGF_MONSTERS)
	MARY A 0 A_JumpIfInventory("Animation2",1,"CryLoop")
	MARY A 0 A_JumpIfInventory("Animation1",1,"AirDash")
  	MARY PPPPPPPP 0 A_SpawnItemEx("MaryTear",8,0,46,0,Random(-5,5),Random(2,4))
	MARY P 8
	Goto Spawn

  FallScream:
  	MARY U 0 A_TakeInventory("SpeedTrailX",10)
	MARY U 0 A_RadiusGive("ProjectilePlayers",192,RGF_MONSTERS)
	MARY ADEPED 1 A_CheckFloor("See")
	MARY Q 0 A_TakeInventory("SpeedTrailX",10)
	MARY Q 0 A_RadiusGive("ProjectilePlayers",192,RGF_MONSTERS)
	MARY A 0 A_JumpIfInventory("Animation2",1,"CryLoop")
	MARY A 0 A_JumpIfInventory("Animation1",1,"AirDash")
	MARY AGHPHG 1 A_CheckFloor("See")
	Loop
	
  CryLoop:
	MARY P 1 A_SpawnItemEx("MaryTear",8,0,32,0,Random(-5,5),Random(2,4))
	MARY A 0 A_JumpIfInventory("Animation2",1,"CryLoop")
	MARY A 0 A_JumpIfInventory("Animation1",1,"AirDash")
	Goto See

  Death.Fire:
	MARY Q 0 A_RadiusGive("ProjectilePlayers",192,RGF_MONSTERS)
	MARY Q 0 ACS_NamedExecuteAlways("ColorCoin",0,3,0,0)
	MARY Q 0 A_PlaySound("lgirl/fallscream",CHAN_VOICE,1.0,FALSE,3.5)
	RunAround:
	MARY Q 0 ACS_NamedExecuteAlways("ColorCoin",0,3,0,0)
	MARY Q 0 A_RadiusGive("ProjectilePlayers",192,RGF_MONSTERS)
	MARY PPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPP 1 { A_Wander; A_ChangeVelocity(-8.25,0,velz,CVF_REPLACE|CVF_RELATIVE); A_SpawnItemEx("FlowerProjectile3_Trail",0,Random(-16,16),Random(8,48),Random(-1,1),Random(-1,1),Random(5,7),0,SXF_NOCHECKPOSITION); }
	RunLoop:
	MARY Q 0 A_RadiusGive("ProjectilePlayers",192,RGF_MONSTERS)
	MARY PPPPPPPPPPPPPPPP 1 { A_Wander; A_ChangeVelocity(-8.25,0,velz,CVF_REPLACE|CVF_RELATIVE); A_SpawnItemEx("FlowerProjectile3_Trail",0,Random(-16,16),Random(8,48),Random(-1,1),Random(-1,1),Random(5,7),0,SXF_NOCHECKPOSITION); }
	MDED X 0 A_CheckPlayerDone
	Loop
  Death:
  XDeath:
	MARY P 0 A_ChangeFlag("NOGRAVITY",1)
	MARY P 0 A_ChangeFlag("NOCLIP",1)
	MARY P 0 A_ChangeFlag("NOBLOCKMAP",1)
	MARY P 0 A_ChangeVelocity(0,0,1,CVF_RELATIVE|CVF_REPLACE)
	MARY P 35 A_PlayerScream
	MARY P 0 A_NoBlocking
	MARY P 0 ACS_ExecuteAlways(64,0,2,0,0)
	MARY P 0 A_ChangeFlag("NOGRAVITY",0)
	MARY P 0 A_ChangeVelocity(0,0,16,CVF_RELATIVE|CVF_REPLACE)
	MARY PB 1
	MARY P 0 A_ChangeFlag("NOINTERACTION",1)
	Goto DeathThrow
  DeathThrow:
	MDED ABCDEFGHIJKLMNOPQRSTUVWX 1 A_ChangeVelocity(0.0,0.0,-0.01)
	MDED X 0 A_CheckPlayerDone
	Loop
  NoJump:
	MARY A 0 A_TakeInventory("JumpRequested",1)
  AllowJumps:
	MARY D 0 A_TakeInventory("Jumps",10)
	MARY D 0 ACS_NamedExecuteAlways("PlayFootstepSound",0,0,0,0)
	MARY A 0 A_JumpIfInventory("RequestAnimation",1,"AirDash")
	MARY A 0 A_JumpIf(max(abs(velx),abs(vely))<3,"Spawn")	//Slowest
	MARY A 0 A_JumpIf(max(abs(velx),abs(vely))<11,"See6")	//Slow
	MARY A 0 A_JumpIf(max(abs(velx),abs(vely))<19,"See4")	//Medium
	Goto See2
  AllowJumpsEnd:
	MARY D 0 A_TakeInventory("Jumps",10)
	MARY D 0 ACS_NamedExecuteAlways("PlayFootstepSound",0,0,0,0)
	MARY A 0 A_JumpIfInventory("RequestAnimation",1,"AirDash")
	Goto See

  cgem:
	MCGM A 0 A_ChangeFlag("INVULNERABLE",FALSE)
	MCGM A 37
	MCGM BC 2
	MCGM D 4
	MCGM EFFGGHHHHHGGFFE 2
	MCGM D -1
	Stop

  cgemwait:
	MCGM A 0 A_ChangeFlag("INVULNERABLE",FALSE)
	MCGM A -1
	Stop

	}
}

Actor LGirlPlayer_Super : LGirlPlayer
{
Health 200
Player.DisplayName "Magical Cutie Mary"
Player.MaxHealth 200
Player.MorphWeapon "HeartWand"
}

ACTOR XanePlayer : DoomPlayer
{
  Speed 0.925
  Scale 0.2
  Health 100
  Player.MaxHealth 100
  Radius 16
  Height 30
  Mass 57
  Player.ViewHeight 25
  PainChance 255
  Player.ForwardMove 0.98 0.78
  Player.SideMove 0.9 0.8
  Player.JumpZ 4.75
  Player.UseRange 48
  Player.SoundClass "xane"
  Player.WeaponSlot 1, "XaneSword"
  Player.DisplayName "Xane"
  Player.StartItem "XaneSword"
  Player.ScoreIcon "CPRVB0"
  Player.ColorRange 32, 39
  DamageFactor "Bounce", 0.0
  Player.FallingScreamSpeed 998.0, 999.0
  Player.ColorRange 32, 39
  Player.ColorSet 0, "Arthas",         0x7D, 0x75,  0x7B
  Player.ColorSet 1, "Uther",          0xFD, 0xF1,  0x5A
  Player.ColorSet 2, "Kirby",         0xE9, 0xE2,  0x46
  Player.ColorSet 3, "Xane",           0x49, 0x42,  0x49
  Player.ColorSet 4, "Light Gray",    0x58, 0x67,  0x5A
  Player.ColorSet 5, "Light Brown",   0x38, 0x47,  0x3A
  Player.ColorSet 6, "Light Red",     0xB0, 0xBF,  0xB2
  Player.ColorSet 7, "Light Blue",    0xC0, 0xCF,  0xC2

  States
  {
  Spawn:
	GIRL A 0
	ARTH A 2
	GIRL A 0 A_JumpIfInventory("ForceFlatten",1,"Pain.Flatten")
	GIRL A 0 A_JumpIf(max(abs(velx),abs(vely))<3,"Spawn")	//Stand
	//GIRL A 0 A_JumpIf(max(abs(velx),abs(vely))<6,"See9")	//Slow
	//GIRL A 0 A_JumpIf(max(abs(velx),abs(vely))<9,"See5")	//Medium
	//GIRL A 0 A_JumpIf(max(abs(velx),abs(vely))>=9,"SeeFast")	//Fast
	//GIRL A 0 A_CheckFloor("AllowJumpsIdle")
    //Loop
	Goto See9
  AllowJumpsIdle:
	GIRL D 0 A_TakeInventory("Jumps",10)
	GIRL D 0 ACS_ExecuteAlways(66,0,0,0,0)
	Goto Spawn
  See:
	GIRL A 0 A_GiveInventory("SpeedTrailX",1)
	GIRL A 0 A_JumpIfInventory("ForceFlatten",1,"Pain.Flatten")
	//GIRL A 0 A_JumpIfInventory("Weakness",1,"Insult")
	GIRL A 0 A_TakeInventory("CryIntroSeen",1)
	GIRL A 0 A_JumpIf(max(abs(velx),abs(vely))<3,"Spawn")	//Stand
	//GIRL A 0 A_JumpIf(max(abs(velx),abs(vely))<6,"See9")	//Slow
	//GIRL A 0 A_JumpIf(max(abs(velx),abs(vely))<9,"See5")	//Medium
	Goto See9
  SeeFast:
	//GIRL A 0 A_ChangeFlag("INVULNERABLE",TRUE)
    ARTH B 2 A_SpawnItemEx("MaryAirDash",0,0,-16,-8,0,0,0,SXF_SETMASTER|SXF_NOCHECKPOSITION,0)	//Fastest
	GIRW H 0 A_CheckFloor("AllowJumps")
  See2:
	//GIRL A 0 A_ChangeFlag("INVULNERABLE",TRUE)
	ARTH C 2 A_SpawnItemEx("MaryAirDash",0,0,-16,-8,0,0,0,SXF_SETMASTER|SXF_NOCHECKPOSITION,0)	//Fastest
	GIRW B 0 A_CheckFloor("AllowJumps2")
  See3:
	//GIRL A 0 A_ChangeFlag("INVULNERABLE",TRUE)
	ARTH D 2 A_SpawnItemEx("MaryAirDash",0,0,-16,-8,0,0,0,SXF_SETMASTER|SXF_NOCHECKPOSITION,0)	//Fastest
	GIRW M 0 A_CheckFloor("AllowJumps3")
  See4:
	//GIRL A 0 A_ChangeFlag("INVULNERABLE",TRUE)
	ARTH A 2 A_SpawnItemEx("MaryAirDash",0,0,-16,-8,0,0,0,SXF_SETMASTER|SXF_NOCHECKPOSITION,0)	//Fastest
	GIRW H 0 A_CheckFloor("AllowJumpsEnd")
	Goto See
	
  See5:
    ARTH B 3
	GIRW H 0 A_CheckFloor("AllowJumps")
  See6:
	ARTH C 3
	GIRW B 0 A_CheckFloor("AllowJumps2")
  See7:
	ARTH D 3
	GIRW M 0 A_CheckFloor("AllowJumps3")
  See8:
	ARTH A 3
	GIRW H 0 A_CheckFloor("AllowJumpsEnd")
	Goto See

  See9:
    ARTH B 5
	GIRW H 0 A_CheckFloor("AllowJumps")
  See10:
	ARTH C 5
	GIRW B 0 A_CheckFloor("AllowJumps2")
  See11:
	ARTH D 5
	GIRW M 0 A_CheckFloor("AllowJumps3")
  See12:
	ARTH A 5
	GIRW H 0 A_CheckFloor("AllowJumpsEnd")
	Goto See
  NoJump:
	GIRL A 0 A_TakeInventory("JumpRequested",1)
  AllowJumps:
	GIRL D 0 A_TakeInventory("Jumps",10)
	GIRL A 0 A_JumpIf(max(abs(velx),abs(vely))<3,"Spawn")	//Slowest
	//GIRL A 0 A_JumpIf(max(abs(velx),abs(vely))<6,"See10")	//Slow
	//GIRL A 0 A_JumpIf(max(abs(velx),abs(vely))<9,"See6")	//Medium
	//Goto See2
	Goto See10
  AllowJumps2:
	GIRL D 0 A_TakeInventory("Jumps",10)
	GIRW A 0 ACS_NamedExecuteAlways("PlayFootstepSound",0,0,0,0)
	GIRL A 0 A_JumpIf(max(abs(velx),abs(vely))<3,"Spawn")	//Slowest
	//GIRL A 0 A_JumpIf(max(abs(velx),abs(vely))<6,"See11")	//Slow
	//GIRL A 0 A_JumpIf(max(abs(velx),abs(vely))<9,"See7")	//Medium
	//Goto See3
	Goto See11
  AllowJumps3:
  GIRL D 0 A_TakeInventory("Jumps",10)
	GIRL A 0 A_JumpIf(max(abs(velx),abs(vely))<3,"Spawn")	//Slowest
	//GIRL A 0 A_JumpIf(max(abs(velx),abs(vely))<6,"See12")	//Slow
	//GIRL A 0 A_JumpIf(max(abs(velx),abs(vely))<9,"See8")	//Medium
	//Goto See4
	Goto See12
  AllowJumpsEnd:
	GIRL D 0 A_TakeInventory("Jumps",10)
	GIRW A 0 ACS_NamedExecuteAlways("PlayFootstepSound",0,0,0,0)
	GIRL A 0 A_JumpIf(max(abs(velx),abs(vely))<3,"Spawn")	//Slowest
	//GIRL A 0 A_JumpIf(max(abs(velx),abs(vely))<6,"See9")	//Slow
	//GIRL A 0 A_JumpIf(max(abs(velx),abs(vely))<9,"See5")	//Medium
	//Goto See
	Goto See9
  Transform:
	SUPA A 0
	SUPA ABCDE 1
	SUPA F 30
	SUPA GHI 2
	SUPA J 32
	SUPA KLMN 2
	Goto See
  WallJump:
	ARTH A 3 A_SpawnItemEx("WallCheck",0,0,0,-12,0,0,0,SXF_SETMASTER|SXF_NOCHECKPOSITION,0)
	Loop
  EndWallJump:
	ARTH A 1 A_KillChildren("Normal")
	ARTH A 1 A_TakeInventory("NoWall",1)
	Goto See
  Water:
	ARTH D 0 A_GiveInventory("InWater",1)
	Goto See	
  Missile:
    ARTH EFGF 3
    Goto Spawn
  Melee:
    ARTH E 2
    Goto Missile
  Pain:
	ARTH A 0
    ARTH G 4 
    ARTH G 4 A_Pain
    Goto Spawn
  Pain.Flatten:
	//ARTH "#" 0 A_ChangeFlag("NOPAIN",TRUE)
	ARTH "#" 0 A_Pain
	ARTH "#" 0 A_DamageSelf(5,"Flatten")
	ARTH "#" 1 A_SetScale(0.25,0.25)
	ARTH "#" 0 A_ChangeVelocity(0.0,0.0,-6,CVF_REPLACE)
	ARTH "#" 1 A_SetScale(scalex,scaley-0.015)
	ARTH "#" 0 A_ChangeVelocity(0.0,0.0,-6,CVF_REPLACE)
	ARTH "#" 1 A_SetScale(scalex,scaley-0.02)
	ARTH "#" 0 A_ChangeVelocity(0.0,0.0,-6,CVF_REPLACE)
	ARTH "#" 1 A_SetScale(scalex,scaley-0.02)
	ARTH "#" 0 A_ChangeVelocity(0.0,0.0,-6,CVF_REPLACE)
	ARTH "#" 1 A_SetScale(scalex,scaley-0.02)
	ARTH "#" 0 A_ChangeVelocity(0.0,0.0,-6,CVF_REPLACE)
	ARTH "#" 1 A_SetScale(scalex,scaley-0.015)
	ARTH "#" 0 A_ChangeVelocity(0.0,0.0,-6,CVF_REPLACE)
	ARTH "#" 1
	ARTH "#" 0 A_ChangeVelocity(0.0,0.0,-6,CVF_REPLACE)
	ARTH "#" 1
	ARTH "#" 0 A_ChangeVelocity(0.0,0.0,-6,CVF_REPLACE)
	ARTH "#" 1
	ARTH "#" 0 A_ChangeVelocity(0.0,0.0,-6,CVF_REPLACE)
	ARTH "#" 1
	ARTH "#" 0 A_ChangeVelocity(0.0,0.0,-6,CVF_REPLACE)
	ARTH "#" 1
	ARTH "#" 0 A_ChangeVelocity(0.0,0.0,-6,CVF_REPLACE)
	ARTH "#" 1
	ARTH "#" 0 A_ChangeVelocity(0.0,0.0,-6,CVF_REPLACE)
	ARTH "#" 1
	ARTH "#" 0 A_ChangeVelocity(0.0,0.0,-6,CVF_REPLACE)
	ARTH "#" 1
	ARTH "#" 0 A_ChangeVelocity(0.0,0.0,-6,CVF_REPLACE)
	ARTH "#" 1
	ARTH "#" 0 A_ChangeVelocity(0.0,0.0,-6,CVF_REPLACE)
	ARTH "#" 1
	ARTH "#" 0 A_ChangeVelocity(0.0,0.0,-6,CVF_REPLACE)
	ARTH "#" 1
	ARTH "#" 0 A_ChangeVelocity(0.0,0.0,-6,CVF_REPLACE)
	ARTH "#" 1
	ARTH "#" 0 A_ChangeVelocity(0.0,0.0,-6,CVF_REPLACE)
	ARTH "#" 1
	ARTH "#" 0 A_ChangeVelocity(0.0,0.0,-6,CVF_REPLACE)
	ARTH "#" 1
	ARTH "#" 0 A_ChangeVelocity(0.0,0.0,-6,CVF_REPLACE)
	ARTH "#" 1
	ARTH "#" 0 A_ChangeVelocity(0.0,0.0,-6,CVF_REPLACE)
	ARTH "#" 1
	ARTH "#" 0 A_ChangeVelocity(0.0,0.0,-6,CVF_REPLACE)
	ARTH "#" 1
	ARTH "#" 0 A_ChangeVelocity(0.0,0.0,-6,CVF_REPLACE)
	ARTH "#" 1
	ARTH "#" 0 A_ChangeVelocity(0.0,0.0,-6,CVF_REPLACE)
	ARTH "#" 1
	ARTH "#" 0 A_ChangeVelocity(0.0,0.0,-6,CVF_REPLACE)
	ARTH "#" 1
	ARTH "#" 0 A_ChangeVelocity(0.0,0.0,-6,CVF_REPLACE)
	ARTH "#" 1
	ARTH "#" 0 A_ChangeVelocity(0.0,0.0,-6,CVF_REPLACE)
	ARTH "#" 1
	ARTH "#" 0 A_ChangeVelocity(0.0,0.0,-6,CVF_REPLACE)
	ARTH "#" 1
	ARTH "#" 0 A_ChangeVelocity(0.0,0.0,-6,CVF_REPLACE)
	ARTH "#" 1
	ARTH "#" 0 A_ChangeVelocity(0.0,0.0,-6,CVF_REPLACE)
	ARTH "#" 1
	ARTH "#" 0 A_ChangeVelocity(0.0,0.0,-6,CVF_REPLACE)
	ARTH "#" 1
	ARTH "#" 0 A_ChangeVelocity(0.0,0.0,-6,CVF_REPLACE)
	ARTH "#" 1
	ARTH "#" 0 A_ChangeVelocity(0.0,0.0,-6,CVF_REPLACE)
	ARTH "#" 1
	ARTH "#" 0 A_ChangeVelocity(0.0,0.0,-6,CVF_REPLACE)
	ARTH "#" 1
	ARTH "#" 0 A_ChangeVelocity(0.0,0.0,-6,CVF_REPLACE)
	ARTH "#" 1
	ARTH "#" 0 A_ChangeVelocity(0.0,0.0,-6,CVF_REPLACE)
	ARTH "#" 1
	ARTH "#" 0 A_ChangeVelocity(0.0,0.0,-6,CVF_REPLACE)
	ARTH "#" 1
	ARTH "#" 0 A_ChangeVelocity(0.0,0.0,-6,CVF_REPLACE)
	ARTH "#" 1
	ARTH "#" 0 A_ChangeVelocity(0.0,0.0,-6,CVF_REPLACE)
	ARTH "#" 1
	ARTH "#" 0 A_ChangeVelocity(0.0,0.0,-6,CVF_REPLACE)
	ARTH "#" 1
	ARTH "#" 0 A_ChangeVelocity(0.0,0.0,-6,CVF_REPLACE)
	ARTH "#" 1
	ARTH "#" 0 A_ChangeVelocity(0.0,0.0,-6,CVF_REPLACE)
	ARTH "#" 1
	ARTH "#" 0 A_ChangeVelocity(0.0,0.0,-6,CVF_REPLACE)
	ARTH "#" 1
	ARTH "#" 0 A_ChangeVelocity(0.0,0.0,-6,CVF_REPLACE)
	ARTH "#" 1
	ARTH "#" 0 A_ChangeVelocity(0.0,0.0,-6,CVF_REPLACE)
	ARTH "#" 1
	ARTH "#" 0 A_ChangeVelocity(0.0,0.0,-6,CVF_REPLACE)
	ARTH "#" 1
	ARTH "#" 0 A_ChangeVelocity(0.0,0.0,-6,CVF_REPLACE)
	ARTH "#" 1
	ARTH "#" 0 A_ChangeVelocity(0.0,0.0,-6,CVF_REPLACE)
	ARTH "#" 1
	ARTH "#" 0 A_ChangeVelocity(0.0,0.0,-6,CVF_REPLACE)
	ARTH "#" 1
	ARTH "#" 0 A_ChangeVelocity(0.0,0.0,-6,CVF_REPLACE)
	ARTH "#" 1
	ARTH "#" 0 A_ChangeVelocity(0.0,0.0,-6,CVF_REPLACE)
	ARTH "#" 1
	ARTH "#" 0 A_ChangeVelocity(0.0,0.0,-6,CVF_REPLACE)
	ARTH "#" 1
	ARTH "#" 0 A_ChangeVelocity(0.0,0.0,-6,CVF_REPLACE)
	ARTH "#" 1
	ARTH "#" 0 A_ChangeVelocity(0.0,0.0,-6,CVF_REPLACE)
	ARTH "#" 1
	ARTH "#" 0 A_ChangeVelocity(0.0,0.0,-6,CVF_REPLACE)
	ARTH "#" 1
	ARTH "#" 0 A_ChangeVelocity(0.0,0.0,-6,CVF_REPLACE)
	ARTH "#" 1
	ARTH "#" 0 A_ChangeVelocity(0.0,0.0,-6,CVF_REPLACE)
	ARTH "#" 1
	ARTH "#" 0 A_ChangeVelocity(0.0,0.0,-6,CVF_REPLACE)
	ARTH "#" 1
	ARTH "#" 0 A_ChangeVelocity(0.0,0.0,-6,CVF_REPLACE)
	ARTH "#" 1
	ARTH "#" 0 A_ChangeVelocity(0.0,0.0,-6,CVF_REPLACE)
	ARTH "#" 1
	ARTH "#" 0 A_ChangeVelocity(0.0,0.0,-6,CVF_REPLACE)
	ARTH "#" 1
	ARTH "#" 0 A_ChangeVelocity(0.0,0.0,-6,CVF_REPLACE)
	ARTH "#" 1
	ARTH "#" 0 A_ChangeVelocity(0.0,0.0,-6,CVF_REPLACE)
	ARTH "#" 1
	ARTH "#" 0 A_ChangeVelocity(0.0,0.0,-6,CVF_REPLACE)
	ARTH "#" 1
	ARTH "#" 0 A_ChangeVelocity(0.0,0.0,-6,CVF_REPLACE)
	ARTH "#" 1
	ARTH "#" 0 A_ChangeVelocity(0.0,0.0,-6,CVF_REPLACE)
	ARTH "#" 1
	ARTH "#" 0 A_ChangeVelocity(0.0,0.0,-6,CVF_REPLACE)
	ARTH "#" 1
	ARTH "#" 0 A_ChangeVelocity(0.0,0.0,-6,CVF_REPLACE)
	ARTH "#" 1
	ARTH "#" 0 A_ChangeVelocity(0.0,0.0,-6,CVF_REPLACE)
	ARTH "#" 1
	ARTH "#" 0 A_ChangeVelocity(0.0,0.0,-6,CVF_REPLACE)
	ARTH "#" 1
	ARTH "#" 0 A_ChangeVelocity(0.0,0.0,-6,CVF_REPLACE)
	ARTH "#" 1
	ARTH "#" 0 A_ChangeVelocity(0.0,0.0,-6,CVF_REPLACE)
	ARTH "#" 1
	ARTH "#" 0 A_ChangeVelocity(0.0,0.0,-6,CVF_REPLACE)
	ARTH "#" 1
	ARTH "#" 1 A_SetScale(scalex,scaley+0.015)
	ARTH "#" 0 A_ChangeVelocity(0.0,0.0,-6,CVF_REPLACE)
	ARTH "#" 1 A_SetScale(scalex,scaley+0.02)
	ARTH "#" 0 A_ChangeVelocity(0.0,0.0,-6,CVF_REPLACE)
	ARTH "#" 1 A_SetScale(scalex,scaley+0.02)
	ARTH "#" 0 A_ChangeVelocity(0.0,0.0,-6,CVF_REPLACE)
	ARTH "#" 1 A_SetScale(scalex,scaley+0.02)
	ARTH "#" 0 A_ChangeVelocity(0.0,0.0,-6,CVF_REPLACE)
	ARTH "#" 1 A_SetScale(scalex,scaley+0.015)
	ARTH "#" 0 A_ChangeVelocity(0.0,0.0,-6,CVF_REPLACE)
	ARTH "#" 1 A_SetScale(scalex,scaley+0.01)
	ARTH "#" 0 A_ChangeVelocity(0.0,0.0,-6,CVF_REPLACE)
	ARTH "#" 2 A_SetScale(scalex,scaley+0.005)
	ARTH "#" 0 A_ChangeVelocity(0.0,0.0,-6,CVF_REPLACE)
	ARTH "#" 1 A_SetScale(scalex,scaley-0.01)
	ARTH "#" 0 A_ChangeVelocity(0.0,0.0,-6,CVF_REPLACE)
	ARTH "#" 1 A_SetScale(scalex,scaley-0.015)
	//ARTH "#" 0 A_ChangeFlag("NOPAIN",FALSE)
	Goto See
  Insult:
	ARTH A 0 A_TakeInventory("Weakness",1)
	Goto Spawn
  TakeInventoryX:
	Goto See
  WallJump:
	ARTH A 3 A_SpawnItemEx("WallCheck",0,0,0,-12,0,0,0,SXF_SETMASTER|SXF_NOCHECKPOSITION,0)
	Loop
  WJDetect:	//Initial detection used as a last check beore "sticking" the player to a wall.
	ARTH A 0
	ARTH A 0 A_SpawnItemEx("WallCheck",0,0,0,12,0,0,0,SXF_SETMASTER|SXF_NOCHECKPOSITION,0)
	Goto See
  EndWallJump:
	ARTH A 1 A_KillChildren("Normal")
	ARTH A 1 A_TakeInventory("NoWall",1)
	Goto See

  cgemwait:
	AGEM A -1
	Stop
  cgem:
	ARTG A 0 A_ChangeVelocity(velx/64,vely/64,14,CVF_REPLACE)
	ARTG ABCDEFGHIJKL 1
  cgemloop:
	ARTG MNOPQRSTUVWABCDEFGHIJKL 1 A_CheckFloor("cgemfin")
	Loop
  cgemfin:
	AGEM ABCDEFGHIJKLMNOPQ 2
	AGEM R 17
	AGEM S -1
	Stop
	
  Death:
  XDeath:
    PLAY H 10 A_ChangeVelocity(0,4,0,CVF_REPLACE)
    PLAY I 10 A_PlayerScream
    PLAY J 10 A_NoBlocking
    PLAY KLM 10
    PLAY N -1 A_CheckPlayerDone
    Wait
	PLAY N -1 A_CheckPlayerDone
	Wait
	}
}

Actor XanePlayer_Super : XanePlayer
{
Health 200
Player.MaxHealth 200
Player.MorphWeapon "XaneSword"
}

actor MaryA : LGirlPlayer
{
Health 100
Translation "32:39=0:7"
+LOOKALLAROUND
States
{
Spawn:
GIRL C 0
Goto Super::Spawn
Special:
GIRL B 0 ACS_NamedExecute("ColorCoin",0,4,0,0)
Goto Super::Spawn
Pain:
TNT1 A 0 A_LogInt(health)
Goto Super::Pain
Pain.Umbrella:
TNT1 A 0 A_LogInt(health)
Goto Super::Pain.Umbrella
Pain.Flatten:
TNT1 A 0 A_LogInt(health)
Goto Super::Pain.Flatten
Pain.Fire:
TNT1 A 0 A_LogInt(health)
Goto Super::Pain
Pain.Stun:
TNT1 A 0 A_LogInt(health)
Goto Super::Pain

Death:
XDeath:
TNT1 A 0 A_SetScale(0.09)
TNT1 A 0 A_Log("Killed Dummy!")
GEM1 QRSTUVWXYXWVUTSRQRSTUVWXYXWVUTSR 2 A_FaceTarget
GEM1 Q 17 A_ChangeVelocity(-20,0,-7.5,CVF_RELATIVE|CVF_REPLACE)
GEM1 Q 3 A_SpawnItem("MaryA",0,128)
Goto FadeOut
FadeOut:
GEM1 Q 1 A_FadeOut(0.1,1)
Loop
}
}

actor AdultScaleTester : LGirlPlayer
{
Height 56
Player.ViewHeight 64
Scale 1.9
Player.DisplayName "Scale Test"
}

actor Jane
{
Radius 16
Height 56
Scale 0.2
-SOLID
+NOINTERACTION
States
{
Spawn:
JANE A -1
Stop
}
}

Actor MaryTear
{
Scale 0.1
Radius 1
Height 2
RenderStyle Add
Alpha 0.65
PROJECTILE
-NOGRAVITY
-ACTIVATEPCROSS
States
{
Spawn:
BUBB B -1
Stop
Death:
BUBB B 1 A_FadeOut(0.25,1)
Loop
}
}

actor SuperSparkle
{
RenderStyle Add
+NOGRAVITY
+NOINTERACTION
States
{
Spawn:
TNT1 A 0
TNT1 A 0 ACS_NamedExecuteAlways("ColorCoin",0,0,0,0)
TNT1 A 1 A_Jump(128, "B", "C")
Goto A
A:
SPRK A 1 A_FadeOut(0.1,1)
Loop
B:
SPRK B 1 A_FadeOut(0.1,1)
Loop
C:
SPRK C 1 A_FadeOut(0.1,1)
Loop
FadeOut:
SPRK "#" 1 A_FadeOut(0.1,1)
Loop
}
}

Actor SpecialStageTimeBonus : CustomInventory
{
Radius 24
Height 48
Inventory.Amount 1
Inventory.MaxAmount 1
Inventory.InterHubAmount 0
Inventory.PickupMessage "30 seconds were added to your time limit!"
+AUTOACTIVATE
+INVENTORY.NOSCREENFLASH
+NOGRAVITY
-COUNTITEM

States
{
Spawn:
TNT1 A 0
CGM1 B 1 ACS_NamedExecuteAlways("ColorCoin",0,0,0,0)
Loop
Pickup:
Use:
TNT1 A 0
TNT1 A 0 ACS_NamedExecute("IncreaseSSTimer",0,30,0,0)
TNT1 A 1 A_RailWait
Stop
}
}

actor RequestedCDrops : Inventory { Inventory.MaxAmount 10 }
actor Jumps : Inventory { Inventory.MaxAmount 5 }
actor onWater : Inventory { Inventory.MaxAmount 1 }
actor SpecialStageHUDMod : Inventory { Inventory.MaxAmount 1 }
actor ReverseVelocity : Inventory { Inventory.MaxAmount 1 }
actor SuperX : Inventory { Inventory.MaxAmount 1 }

actor CoinX : Inventory replaces Coin 260	//Deathmatch coin (renamed to avoid conflict with Strife's useless coin)
{
Radius 16
Height 32
Scale 0.65
Inventory.Amount 1
Inventory.MaxAmount 1024
Inventory.InterHubAmount 0
Inventory.PickupMessage ""
Inventory.PickupSound "dsempty"
 inventory.respawntics 700
 +INVENTORY.ALWAYSRESPAWN
-COUNTITEM
+NOGRAVITY
//$Title Coin
States
{
Spawn:
COIN A 0
COIN A 0 A_JumpIf(CallACS("CheckGMode",0,0,0,0)==FALSE,"Remove")
COIN A 0 A_ChangeVelocity(0,0,16,CVF_REPLACE)
COIN "#" 1
COIN A 0 A_ChangeVelocity(0,0,0,CVF_REPLACE)
Spin:
COIN "#" 1 A_Turn(-8.0)
Loop
Remove:
COIN "#" 1 A_SpawnItem("CoinSP_Dummy",0,1,0)
FadeOut:
COIN "#" 1 A_FadeOut(1,1)
Loop
}
}

actor CoinSP_Dummy : CustomInventory	//Singleplayer/co-op coin
{
Radius 16
Height 32
Scale 0.65
SpawnID 1
Inventory.Amount 1
Inventory.MaxAmount 1024
Inventory.InterHubAmount 0
Inventory.PickupMessage ""
Inventory.PickupSound "dsempty"
+INVENTORY.NOSCREENFLASH
-COUNTITEM
+NOGRAVITY
States
{
Spawn:
COIN A 0
COIN A 0 A_ChangeVelocity(0,0,16,CVF_REPLACE)
COIN "#" 1
COIN A 0 A_ChangeVelocity(0,0,0,CVF_REPLACE)
COIN A 0 A_Jump(96, "Silver")
COIN A 0 A_Jump(64, "Brown")
COIN A 0 A_Jump(32, "Pink")
See:
COIN "#" 1 A_Turn(-8.0)
Loop
Silver:
COIN B 0
Goto See
Brown:
COIN C 0
Goto See
Pink:
COIN D 0
Goto See
Pickup:
TNT1 A 0 A_GiveInventory("CoinSP",1)
TNT1 A 0 A_JumpIf(CallACS("GetSpecialStatus",0,0,0,0)>0,"Water")
TNT1 A 0 A_PlaySound("coin/normal",CHAN_ITEM,1.0)
Stop
Water:
TNT1 A 0 A_PlaySound("coin/water",CHAN_ITEM,1.0)
Stop
}
}

actor CoinSpawner_Gravity
{
Radius 1
Height 2
Gravity 2
-SOLID
States
{
Spawn:
TNT1 A 0
See:
TNT1 A 1 A_JumpIf(velz==0,"Death")
Loop
Death:
TNT1 A 0 A_SpawnItemEx("Coin",0,0,0,0,0,0,0,SXF_NOCHECKPOSITION)
FadeOut:
TNT1 A 1 A_FadeOut(1,1)
Loop
}
}

actor CoinSP : Inventory { Inventory.MaxAmount 1024 }

actor DroppedCoin : CustomInventory	//Coins players temporarily drop in all modes
{
Radius 16
Height 32
Scale 0.65
Inventory.Amount 1
Inventory.MaxAmount 20
Inventory.InterHubAmount 0
Inventory.PickupMessage ""
Inventory.PickupSound "dsempty"
BounceType Grenade
BounceSound "droppedcoin/bounce"
-COUNTITEM
-NOGRAVITY
States
{
Spawn:
COIN A 0
COIN A 0 A_Jump(96, "Silver")
COIN A 0 A_Jump(64, "Brown")
COIN A 0 A_Jump(32, "Pink")
Goto CoinLoop
Silver:
COIN B 0
Goto CoinLoop
Brown:
COIN C 0
Goto CoinLoop
Pink:
COIN D 0
Goto CoinLoop
Pickup:
COIN "#" 1
COIN "#" 1 A_JumpIf(CallACS("GetCDropTimer",0,0,0,0)!=0,"Failure")
COIN "#" 0 A_GiveInventory("CoinSP",1)
COIN "#" 0 A_TakeInventory("DroppedCoin",1)
TNT1 A 0 A_JumpIf(CallACS("GetSpecialStatus",0,0,0,0)>0,"Water")
COIN "#" 0 A_PlaySound("coin/normal",CHAN_ITEM,1.0)
COIN "#" 1 A_RailWait
Stop
Water:
COIN "#" 0 A_PlaySound("coin/water",CHAN_ITEM,1.0)
COIN "#" 1 A_RailWait
Stop
CoinLoop:
COIN "#" 0
COIN "#" 0 A_ChangeVelocity(velx*1.25,vely*1.25,10,CVF_REPLACE)
Spin:
COIN "#" 1 A_Turn(-8.0)
COIN "#" 0 A_GiveInventory("Variable1",1)
COIN "#" 0 A_JumpIfInventory("Variable1",140,"Death")
Loop
Death:	//The flickering is a big mess of copy-pastes.
COIN "#" 1 { A_ChangeFlag("INVISIBLE",FALSE); A_Turn(-8.0); }	
COIN "#" 1 { A_ChangeFlag("INVISIBLE",TRUE); A_Turn(-8.0); }
COIN "#" 1 { A_ChangeFlag("INVISIBLE",FALSE); A_Turn(-8.0); }	
COIN "#" 1 { A_ChangeFlag("INVISIBLE",TRUE); A_Turn(-8.0); }
COIN "#" 1 { A_ChangeFlag("INVISIBLE",FALSE); A_Turn(-8.0); }	
COIN "#" 1 { A_ChangeFlag("INVISIBLE",TRUE); A_Turn(-8.0); }
COIN "#" 1 { A_ChangeFlag("INVISIBLE",FALSE); A_Turn(-8.0); }	
COIN "#" 1 { A_ChangeFlag("INVISIBLE",TRUE); A_Turn(-8.0); }
COIN "#" 1 { A_ChangeFlag("INVISIBLE",FALSE); A_Turn(-8.0); }	
COIN "#" 1 { A_ChangeFlag("INVISIBLE",TRUE); A_Turn(-8.0); }
COIN "#" 1 { A_ChangeFlag("INVISIBLE",FALSE); A_Turn(-8.0); }	
COIN "#" 1 { A_ChangeFlag("INVISIBLE",TRUE); A_Turn(-8.0); }
COIN "#" 1 { A_ChangeFlag("INVISIBLE",FALSE); A_Turn(-8.0); }	
COIN "#" 1 { A_ChangeFlag("INVISIBLE",TRUE); A_Turn(-8.0); }
COIN "#" 1 { A_ChangeFlag("INVISIBLE",FALSE); A_Turn(-8.0); }	
COIN "#" 1 { A_ChangeFlag("INVISIBLE",TRUE); A_Turn(-8.0); }
COIN "#" 1 { A_ChangeFlag("INVISIBLE",FALSE); A_Turn(-8.0); }	
COIN "#" 1 { A_ChangeFlag("INVISIBLE",TRUE); A_Turn(-8.0); }
COIN "#" 1 { A_ChangeFlag("INVISIBLE",FALSE); A_Turn(-8.0); }	
COIN "#" 1 { A_ChangeFlag("INVISIBLE",TRUE); A_Turn(-8.0); }
COIN "#" 1 { A_ChangeFlag("INVISIBLE",FALSE); A_Turn(-8.0); }	
COIN "#" 1 { A_ChangeFlag("INVISIBLE",TRUE); A_Turn(-8.0); }
COIN "#" 1 { A_ChangeFlag("INVISIBLE",FALSE); A_Turn(-8.0); }	
COIN "#" 1 { A_ChangeFlag("INVISIBLE",TRUE); A_Turn(-8.0); }
COIN "#" 1 { A_ChangeFlag("INVISIBLE",FALSE); A_Turn(-8.0); }	
COIN "#" 1 { A_ChangeFlag("INVISIBLE",TRUE); A_Turn(-8.0); }
COIN "#" 1 { A_ChangeFlag("INVISIBLE",FALSE); A_Turn(-8.0); }	
COIN "#" 1 { A_ChangeFlag("INVISIBLE",TRUE); A_Turn(-8.0); }
COIN "#" 1 { A_ChangeFlag("INVISIBLE",FALSE); A_Turn(-8.0); }	
COIN "#" 1 { A_ChangeFlag("INVISIBLE",TRUE); A_Turn(-8.0); }
COIN "#" 1 { A_ChangeFlag("INVISIBLE",FALSE); A_Turn(-8.0); }	
COIN "#" 1 { A_ChangeFlag("INVISIBLE",TRUE); A_Turn(-8.0); }
COIN "#" 1 { A_ChangeFlag("INVISIBLE",FALSE); A_Turn(-8.0); }	
COIN "#" 1 { A_ChangeFlag("INVISIBLE",TRUE); A_Turn(-8.0); }
Goto FadeOut
FadeOut:
TNT1 A 1 A_FadeOut(0.5,1)
Loop
Failure:
COIN "#" 1
COIN "#" 1
Fail
}
}

actor CoinCircle 261
{
-SOLID
+NOINTERACTION
+NOBLOCKMAP
//$Title Coin circle
//$Sprite COINY0
//$Arg0 Number
//$Arg1 Radius
//$Arg1RenderStyle Circle
//$Arg1RenderColor FFFF80
//$Arg2 Degrees
//$Arg2Enum { 0 = "360°"; 1 = "90°"; 2 = "180°"; }
States
{
Spawn:
TNT1 A 0 NoDelay
TNT1 A 0 ACS_NamedExecuteAlways("SpawnCoinCircle",0,args[0],args[1],args[2])
Death:
TNT1 A 1 A_FadeOut(0.5,1)
Loop
}
}

actor WaterSurface
{
+NOINTERACTION
States
{
Spawn:
TNT1 A 0
TNT1 AAAAAAAAAAAAAAAA 0 A_SpawnParticle("80A0C0",0,35,Random(3,5),Random(0,360),Random(-3.5,3.5),Random(-3.5,3.5),Random(-1.25,1.25),Random(-2.25,2.25),Random(-2.25,2.25),Random(1.75,2.75))
Goto Death
Death:
TMT1 A 1 A_FadeOut(0.5,1)
Loop
}
}

// Armor bonus --------------------------------------------------------------

Actor NotArmorBonus : ArmorBonus replaces ArmorBonus
{
	Radius 20
	Height 16
	Inventory.Pickupmessage "$GOTARMBONUS"
	Armor.Savepercent 0
	Armor.Saveamount 1
	Armor.Maxsaveamount 100
	-COUNTITEM
	+INVENTORY.ALWAYSPICKUP
	States
	{
	Spawn:
		TNT1 AAAAAA 6
		loop
	}
}

// Green armor --------------------------------------------------------------

Actor NotGreenArmor : GreenArmor replaces GreenArmor
{
	Radius 20
	Height 16
	Inventory.Pickupmessage "$GOTARMOR"
	Armor.SavePercent 0
	Armor.SaveAmount 100
	-COUNTITEM
	States
	{
	Spawn:
		TNT1 A 6
		TNT1 B 7 bright
		loop
	}
}

// Blue armor ---------------------------------------------------------------

Actor NoBlueArmor : BlueArmor replaces BlueArmor
{
	Radius 20
	Height 16
	Inventory.Pickupmessage "$GOTMEGA"
	Armor.Savepercent 0
	Armor.Saveamount 100
	-COUNTITEM
	States
	{
	Spawn:
		TNT1 A 6
		TNT1 A 6 bright
		loop
	}
}

Actor CGemBase
{
Alpha 0.0
+NOGRAVITY
-SOLID
+NOINTERACTION
States
{
Spawn:
UNKN A 0
UNKN A 3
Goto FloatX
CGem1:
TNT1 A 0
CGM1 A 3
Goto FloatX
CGem2:
TNT1 A 0
CGM2 A 3
Goto FloatX
CGem3:
TNT1 A 0
CGM3 A 3
Goto FloatX
CGem4:
TNT1 A 0
CGM4 A 3
Goto FloatX
CGem5:
TNT1 A 0
CGM5 A 3
Goto FloatX
CGem6:
TNT1 A 0
CGM6 A 3
Goto FloatX
CGem7:
TNT1 A 0
CGM7 A 3
Goto FloatX
FadeIn:
"####" A 0
"####" AAAAAAAAAA 1 A_FadeIn(0.1)
Goto Spawn
FloatX:
"####" A 0
"####" A 0 Offset(-8, 8) A_FadeIn(1.0)
"####" A 0 Offset(-8, 8) A_ChangeVelocity(0,0,2)
"####" A 28 Offset(-8, 8)
"####" AAAAAAAA 2 Offset(-8, 8) A_ChangeVelocity(0,0,-0.25)
"####" A -1 Offset(-8, 8)
Stop
}
}

Actor CGem1 : CGemBase { States {
									Spawn:
									Goto CGem1
						        }	}
Actor CGem2 : CGemBase { States {
									Spawn:
									Goto CGem2
						        }	}
Actor CGem3 : CGemBase { States {
									Spawn:
									Goto CGem3
						        }	}
Actor CGem4 : CGemBase { States {
									Spawn:
									Goto CGem4
						        }	}
Actor CGem5 : CGemBase { States {
									Spawn:
									Goto CGem5
						        }	}
Actor CGem6 : CGemBase { States {
									Spawn:
									Goto CGem6
						        }	}
Actor CGem7 : CGemBase { States {
									Spawn:
									Goto CGem7
						        }	}

actor ChaseCam
{
  Height 16
  Radius 8
  +NOGRAVITY +NOBLOCKMAP
  states
  {
  Spawn:
    TNT1 A -1
    stop
  }
}

Actor Shockwave
{
Radius 2
Height 4
Gravity 32
Scale 1
RenderStyle Add
Alpha 0.9
+FLOORHUGGER
States
{
Spawn:
TNT1 A 0
TNT1 A 1
Death:
PART A 1 A_FadeOut(0.17,1)
Loop
}
}

//Powerup coins

actor PowerupRandom : RandomSpawner 86
{
Radius 32
Height 64
DropItem "PowerupDamage", 256, 27
DropItem "PowerupHeal", 256, 25
DropItem "PowerupNinja", 256, 15
DropItem "PowerupWater", 256, 10
DropItem "PowerupCombo", 256, 23
DropItem "PowerupSpeed", 256, 24
//$Title Random Coin (Standard)
//$Category pickups
//$Sprite POWRC0
}

actor PowerupNonShop : RandomSpawner 87
{
Radius 32
Height 64
//DropItem "PowerupDamage", 256, 27
//DropItem "PowerupHeal", 256, 25
DropItem "PowerupNinja", 256, 4
DropItem "PowerupWater", 256, 4
DropItem "PowerupCombo", 256, 2
//DropItem "PowerupSpeed" 256, 24
//$Title Random Coin (Not in Jane's Shop)
//$Category pickups
}

actor PowerupRandom_Water : RandomSpawner 88
{
Radius 32
Height 64
DropItem "PowerupWater", 256, 4
DropItem "PowerupHeal", 256, 3
DropItem "PowerupCombo", 256, 2
DropItem "PowerupSpeed", 256, 1
//$Title Random Coin (Water Help)
//$Category pickups
}

actor PowerupDamage : CustomInventory 
{
Radius 32
Height 64
Inventory.MaxAmount 10
Inventory.InterHubAmount 10
Inventory.Icon "I_POWER1"
Tag "$CHALLENGE_DAMAGE"
Inventory.PickupMessage "$CHALLENGE_DAMAGE"
+COUNTITEM
+NOGRAVITY
-AUTOACTIVATE
+INVENTORY.INVBAR
+INVENTORY.HUBPOWER
+INVENTORY.UNTOSSABLE
states
 {
 Spawn:
   TNT1 A 0
   TNT1 A 0 A_CheckProximity("See","PlayerPawn",512.0,1,CPXF_ANCESTOR)
   TNT1 A 0 A_SetScale(1.5)
   POWR IIII 1 bright A_Turn(4)	//LOD
   POWR IIII 1 A_Turn(4)
   Loop
 See:
   TNT1 A 0 A_SetScale(0.5)
   POWR CCCC 1 bright A_Turn(4)	//High quality
   POWR CCCC 1 A_Turn(4)
   Goto Spawn
 Use:
	TNT1 A 0
	TNT1 A 0 ACS_NamedExecuteAlways("AddCPowerupTics",0,2,0,0)
	Stop
 }
}

actor InternalDamage : PowerupGiver	//Used by Power Coins to double the player's power.
{
Radius 1
Height 2
Inventory.MaxAmount 0
Powerup.Color None
Powerup.Duration 0x7FFFFFFF
Powerup.Type DoubleDamage
-COUNTITEM
+AUTOACTIVATE
-INVENTORY.INVBAR
states
 {
 Spawn:
   TNT1 A -1
   Stop
 }
}
actor PowerDoubleDamage : PowerDamage
{
damagefactor "normal", 2
inventory.icon "TNT1A0"
}

actor PowerupHeal : CustomInventory
{
Radius 32
Height 64
Inventory.MaxAmount 10
Inventory.InterHubAmount 10
Inventory.Icon "I_POWER2"
Tag "$CHALLENGE_INVIN"
Inventory.PickupMessage "$CHALLENGE_INVIN"
+COUNTITEM
+NOGRAVITY
-AUTOACTIVATE
+INVENTORY.INVBAR
+INVENTORY.HUBPOWER
+INVENTORY.UNTOSSABLE
states
 {
 Spawn:
   TNT1 A 0
   TNT1 A 0 A_CheckProximity("See","PlayerPawn",512.0,1,CPXF_ANCESTOR)
   TNT1 A 0 A_SetScale(1.5)
   POWR JJJJ 1 bright A_Turn(4)	//LOD
   POWR JJJJ 1 A_Turn(4)
   Loop
 See:
   TNT1 A 0 A_SetScale(0.5)
   POWR DDDD 1 bright A_Turn(4)	//High quality
   POWR DDDD 1 A_Turn(4)
   Goto Spawn
 Use:
	TNT1 A 0
	TNT1 A 0 ACS_NamedExecuteAlways("AddCPowerupTics",0,3,0,0)
	Stop
 }
}

actor PowerupNinja : CustomInventory
{
Radius 32
Height 64
Inventory.MaxAmount 10
Inventory.InterHubAmount 10
Inventory.Icon "I_POWER3"
Tag "$CHALLENGE_NINJA"
Inventory.PickupMessage "$CHALLENGE_NINJA"
+COUNTITEM
+NOGRAVITY
-AUTOACTIVATE
+INVENTORY.INVBAR
+INVENTORY.HUBPOWER
+INVENTORY.UNTOSSABLE
states
 {
 Spawn:
   TNT1 A 0
   TNT1 A 0 A_CheckProximity("See","PlayerPawn",512.0,1,CPXF_ANCESTOR)
   TNT1 A 0 A_SetScale(1.5)
   POWR KKKK 1 bright A_Turn(4)	//LOD
   POWR KKKK 1 A_Turn(4)
   Loop
 See:
   TNT1 A 0 A_SetScale(0.5)
   POWR EEEE 1 bright A_Turn(4)	//High quality
   POWR EEEE 1 A_Turn(4)
   Goto Spawn
 Use:
	TNT1 A 0
	TNT1 A 0 ACS_NamedExecuteAlways("AddCPowerupTics",0,0,0,0)
	Stop
 }
}

actor PowerupWater : CustomInventory
{
Radius 32
Height 64
Inventory.MaxAmount 10
Inventory.InterHubAmount 10
Inventory.Icon "I_POWER4"
Tag "$CHALLENGE_WATER"
Inventory.PickupMessage "$CHALLENGE_WATER"

+COUNTITEM
+NOGRAVITY
-AUTOACTIVATE
+INVENTORY.INVBAR
+INVENTORY.HUBPOWER
+INVENTORY.UNTOSSABLE
states
 {
 Spawn:
   TNT1 A 0
   TNT1 A 0 A_CheckProximity("See","PlayerPawn",512.0,1,CPXF_ANCESTOR)
   TNT1 A 0 A_SetScale(1.5)
   POWR LLLL 1 bright A_Turn(4)	//LOD
   POWR LLLL 1 A_Turn(4)
   Loop
 See:
   TNT1 A 0 A_SetScale(0.5)
   POWR FFFF 1 bright A_Turn(4)	//High quality
   POWR FFFF 1 A_Turn(4)
   Goto Spawn
 Use:
	TNT1 A 0
	TNT1 A 0 ACS_NamedExecuteAlways("AddCPowerupTics",0,1,0,0)
	Stop
 }
}

actor PowerupCombo : CustomInventory
{
Radius 32
Height 64
Inventory.MaxAmount 10
Inventory.InterHubAmount 10
Inventory.Icon "I_POWER5"
Tag "$CHALLENGE_COMBO"
Inventory.PickupMessage "$CHALLENGE_COMBO"
+COUNTITEM
+NOGRAVITY
-AUTOACTIVATE
+INVENTORY.INVBAR
+INVENTORY.HUBPOWER
+INVENTORY.UNTOSSABLE
states
 {
 Spawn:
   TNT1 A 0
   TNT1 A 0 A_CheckProximity("See","PlayerPawn",512.0,1,CPXF_ANCESTOR)
   TNT1 A 0 A_SetScale(1.5)
   POWR MMMM 1 bright A_Turn(4)	//LOD
   POWR MMMM 1 A_Turn(4)
   Loop
 See:
   TNT1 A 0 A_SetScale(0.5)
   POWR GGGG 1 bright A_Turn(4)	//High quality
   POWR GGGG 1 A_Turn(4)
   Goto Spawn
 Use:
	TNT1 A 0
	TNT1 A 0 ACS_NamedExecuteAlways("AddCPowerupTics",0,4,0,0)
	Stop
 }
}

actor PowerupSpeed : CustomInventory
{
Radius 32
Height 64
Inventory.MaxAmount 10
Inventory.InterHubAmount 10
Speed 1.0
Inventory.Icon "I_POWER6"
Tag "$CHALLENGE_SPEED"
Inventory.PickupMessage "$CHALLENGE_SPEED"
+COUNTITEM
+NOGRAVITY
-AUTOACTIVATE
+INVENTORY.INVBAR
+INVENTORY.HUBPOWER
+INVENTORY.UNTOSSABLE
states
 {
 Spawn:
   TNT1 A 0
   TNT1 A 0 A_CheckProximity("See","PlayerPawn",512.0,1,CPXF_ANCESTOR)
   TNT1 A 0 A_SetScale(1.5)
   POWR NNNN 1 bright A_Turn(4)	//LOD
   POWR NNNN 1 A_Turn(4)
   Loop
 See:
   TNT1 A 0 A_SetScale(0.5)
   POWR HHHH 1 bright A_Turn(4)	//High quality
   POWR HHHH 1 A_Turn(4)
   Goto Spawn
 Use:
	TNT1 A 0
	TNT1 A 0 ACS_NamedExecuteAlways("AddCPowerupTics",0,5,0,0)
	Stop
 }
}

actor Ball1 : CustomInventory 89
{
Radius 4
Height 8
Scale 0.5
Inventory.MaxAmount 25
Inventory.InterHubAmount 25
Inventory.Icon "I_BALL1"
Tag "$INV_BALL1"
Inventory.PickupMessage "$INVPICK_BALL1"
+COUNTITEM
+NOGRAVITY
-AUTOACTIVATE
+INVENTORY.INVBAR
+INVENTORY.HUBPOWER
+INVENTORY.UNTOSSABLE
states
 {
 Spawn:
   BALL A -1
   Loop
 Use:
	TNT1 A 0
	TNT1 A 0 A_JumpIf(CallACS("CheckSpecialStage",0,0,0,0)==TRUE,"Refund")
	TNT1 A 0 A_JumpIf(CallACS("CheckSpecialStage",2,0,0,0)==TRUE,"Refund")
	TNT1 A 0 A_GiveInventory("RequestBall1",1)
	Stop
 Refund:
	TNT1 A 0 A_GiveInventory("Ball1",1)
	TNT1 A 0 A_PlaySound("misc/buzzer",CHAN_WEAPON,1.0,FALSE,ATTN_NONE,TRUE)
	TNT1 A 0 A_Log("You can't throw balls in this area.")
	Stop
 }
}

actor Ball2 : Ball1 93
{
Radius 6
Height 12
Scale 0.75
Inventory.Icon "I_BALL2"
Tag "$INV_BALL2"
Inventory.PickupMessage "$INVPICK_BALL2"
states
 {
 Spawn:
   BALL B -1
   Loop
 Use:
	TNT1 A 0
	TNT1 A 0 A_JumpIf(CallACS("CheckSpecialStage",0,0,0,0)==TRUE,"Refund")
	TNT1 A 0 A_JumpIf(CallACS("CheckSpecialStage",2,0,0,0)==TRUE,"Refund")
	TNT1 A 0 A_GiveInventory("RequestBall2",1)
	Stop
 Refund:
	TNT1 A 0 A_GiveInventory("Ball2",1)
	TNT1 A 0 A_PlaySound("misc/buzzer",CHAN_WEAPON,1.0,FALSE,ATTN_NONE,TRUE)
	TNT1 A 0 A_Log("You can't throw balls in this area.")
	Stop
 }
}

actor Ball3 : Ball1 100
{
Radius 8
Height 16
Scale 1
Inventory.Icon "I_BALL3"
Tag "$INV_BALL3"
Inventory.PickupMessage "$INVPICK_BALL3"
states
 {
 Spawn:
   BALL C -1
   Loop
 Use:
	TNT1 A 0
	TNT1 A 0 A_JumpIf(CallACS("CheckSpecialStage",0,0,0,0)==TRUE,"Refund")
	TNT1 A 0 A_JumpIf(CallACS("CheckSpecialStage",2,0,0,0)==TRUE,"Refund")
	TNT1 A 0 A_GiveInventory("RequestBall3",1)
	Stop
 Refund:
	TNT1 A 0 A_GiveInventory("Ball3",1)
	TNT1 A 0 A_PlaySound("misc/buzzer",CHAN_WEAPON,1.0,FALSE,ATTN_NONE,TRUE)
	TNT1 A 0 A_Log("You can't throw balls in this area.")
	Stop
 }
}

actor InventoryTurret : CustomInventory 
{
Inventory.MaxAmount 5
Inventory.InterHubAmount 5
Inventory.Icon "I_TURRET"
Tag "$INV_TURRET"
-COUNTITEM
-AUTOACTIVATE
+INVENTORY.INVBAR
+INVENTORY.HUBPOWER
+INVENTORY.UNTOSSABLE
states
{
	Spawn:
	UNKN A 0
	UNKN A -1 A_Log("Friendly Turrets are not supposed to be placed manually!")
	Stop
 Use:
	TNT1 A 0
	TNT1 A 0 A_JumpIf(CallACS("CheckSpecialStage",0,0,0,0)==TRUE,"Refund")
	TNT1 A 0 A_JumpIf(CallACS("CheckSpecialStage",2,0,0,0)==TRUE,"Refund")
	TNT1 A 0 A_SpawnItem("Turret1_Friendly",128, 0, FALSE)
	Stop
 Refund:
	TNT1 A 0 A_GiveInventory("InventoryTurret",1)
	TNT1 A 0 A_PlaySound("misc/buzzer",CHAN_WEAPON,1.0,FALSE,ATTN_NONE,TRUE)
	TNT1 A 0 A_Log("You can't place turrets in this area.")
	Stop
}
}

actor ThrownBall1	//Standard
{
Radius 4
Height 8
Scale 0.5
Damage (0)
Speed 24
MaxStepHeight 1
BounceType Grenade
WallBounceSound "droppedcoin/bounce"
DamageType "Stun"
-NOGRAVITY
+USEBOUNCESTATE
-SOLID
States
{
Spawn:
BALL A 0
BALL A 0 ACS_NamedExecuteAlways("BallMonitorGlitchyBehavior",0,0,0,0)
BALL "#" 0 A_JumpIf(abs(velx)<0.25,"FixVelX")
BALL "#" 0 A_JumpIf(abs(vely)<0.25,"FixVelY")
LoopX:
BALL "#" 0
BALL "#" 0 A_JumpIfInventory("Variable4",1,"DamageEnemy")	//Damage forcibly and disappear if requested.
//BALL "#" 0 A_JumpIf(velx==0.0 && vely==0.0 && velz==0.0 && z-floorz>2.5,"FootstepSound")
BALL "#" 0 A_TakeInventory("Variable2",1)	//This variable prevents multiple quick bounces from keeping the ball "alive".
BALL "#" 1 A_GiveInventory("Variable1",1)	//This checks for how long the ball has existed. If it goes over 100, it'll disappear or stay.
BALL "#" 0 A_JumpIfInventory("Variable1",75,"GetStatus")	//If "alive" too long, disappear!
Loop
Bounce.Floor:
Bounce.Wall:
Bounce.Ceiling:
BALL "#" 0 A_ChangeFlag("SOLID",TRUE)
BALL "#" 0 A_JumpIfInventory("Variable2",1,"LoopX")
BALL "#" 0 A_TakeInventory("Variable1",15)
BALL "#" 0 A_GiveInventory("Variable2",23)
BALL "#" 0 A_JumpIfInventory("Variable4",1,"DamageEnemy")	//Damage forcibly and disappear if requested.
BALL "#" 1 ACS_NamedExecuteAlways("PlayFootstepSound",0,0,0,0)
Goto LoopX
//Pain:
//BALL "#" 0 A_TakeInventory("Variable1",15)
//BALL "#" 0 A_JumpIfInventory("Variable2",4,"Death")
//Goto LoopX
DamageEnemy:
TNT1 "#" 0 A_Log("attempted damage")
TNT1 "#" 0 A_ChangeFlag("USEBOUNCESTATE",FALSE)	//Stop registering bounces.
BALL "#" 0 A_GiveInventory("Variable3",1)	//Indicate the ball is about to disappear.
TNT1 "#" 0 A_Explode((25),24,!XF_HURTSOURCE,FALSE,12)
Goto FadeOut
AllowPickup:
TNT1 "#" 0 A_Log("allowing pickup.")
TNT1 "#" 0 A_ChangeFlag("USEBOUNCESTATE",FALSE)	//Stop registering bounces.
BALL "#" 0 A_GiveInventory("Variable3",1)	//Indicate the ball is about to disappear.
//BALL AAAAAAAA 3 A_ChangeVelocity(velx/2,vely/2,velz-1,CVF_REPLACE)
BALL "#" 0 A_SpawnItem("Ball1",0,0,FALSE)
Goto FadeOut
GetStatus:
TNT1 "#" 0 A_ChangeFlag("USEBOUNCESTATE",FALSE)	//Stop registering bounces.
BALL "#" 0 A_GiveInventory("Variable3",1)	//Indicate the ball is about to disappear.
TNT1 "#" 0 A_TakeInventory("Variable2",100)
//BALL "#" 0 A_JumpIf(abs(max(velx,vely))<0.5 && z-floorz<2.25,"AllowPickup")
//BALL "#" 0 A_JumpIf(abs(max(velx,vely))<0.5 && z-floorz<32.25,"DropPickup")
BALL "#" 0 A_JumpIf(abs(max(velx,vely))>0.5 || z-floorz>2.25,"DropPickup")
Goto AllowPickup
FadeOut:
BALL "#" 0 A_Log("faded.")
BALL "#" 1 A_FadeOut(1,1)
Loop
FadeOutPrep:
BALL "#" 0 A_Log("timed out. Transitioning to fade.")
BALL "#" 0 A_GiveInventory("Variable3",1)	//Indicate the ball is about to disappear.
Goto FadeOut
DropPickup:
TNT1 A 0 A_Log("drop pickup")
TNT1 A 0 A_ChangeFlag("USEBOUNCESTATE",FALSE)	//Stop registering bounces.
BALL "#" 1 A_GiveInventory("Variable2",1)
BALL "#" 0 A_JumpIfInventory("Variable2",85,"FadeOutPrep")
BALL "#" 0 A_JumpIf(abs(z-floorz)<3.25,"DropPickupCheck2")
Loop
DropPickupCheck2:
BALL "#" 0 A_JumpIf(abs(max(velx,vely))<2.5,"AllowPickup")
Goto DropPickup
FixVelX:
BALL "#" 0 A_ChangeVelocity(0.5,vely,velz,CVF_REPLACE)
BALL "#" 0 A_JumpIf(abs(vely)<0.25,"FixVelY")
Goto LoopX
FixVelY:
BALL "#" 0 A_ChangeVelocity(velx,0.5,velz,CVF_REPLACE)
Goto LoopX
}
}

actor ThrownBall2 : ThrownBall1	//Ice
{
Radius 6
Height 12
Scale 0.75
Damage (0)
Speed 22
DamageType "Ice"
States
{
Spawn:
BALL B 0
BALL B 0 ACS_NamedExecuteAlways("BallMonitorGlitchyBehavior",0,0,0,0)
BALL "#" 0 A_JumpIf(abs(velx)<0.25,"FixVelX")
BALL "#" 0 A_JumpIf(abs(vely)<0.25,"FixVelY")
Goto Super::LoopX
AllowPickup:
TNT1 A 0 A_ChangeFlag("USEBOUNCESTATE",FALSE)	//Stop registering bounces.
//BALL AAAAAAAA 3 A_ChangeVelocity(velx/2,vely/2,velz-1,CVF_REPLACE)
BALL A 0 A_SpawnItem("Ball2",0,0,FALSE)
Goto FadeOut
DamageEnemy:
TNT1 A 0 A_ChangeFlag("USEBOUNCESTATE",FALSE)	//Stop registering bounces.
BALL "#" 0 A_GiveInventory("Variable3",1)	//Indicate the ball is about to disappear.
TNT1 A 0 A_Explode((28),24,!XF_HURTSOURCE,FALSE,12)
Goto FadeOut
}
}

actor ThrownBall3 : ThrownBall1	//Fire
{
Radius 8
Height 16
Scale 1
Damage (0)
Speed 20
DamageType "Fire"
States
{
Spawn:
BALL C 0
BALL C 0 ACS_NamedExecuteAlways("BallMonitorGlitchyBehavior",0,0,0,0)
BALL "#" 0 A_JumpIf(abs(velx)<0.25,"FixVelX")
BALL "#" 0 A_JumpIf(abs(vely)<0.25,"FixVelY")
Goto Super::LoopX
AllowPickup:
TNT1 A 0 A_ChangeFlag("USEBOUNCESTATE",FALSE)	//Stop registering bounces.
//BALL AAAAAAAA 3 A_ChangeVelocity(velx/2,vely/2,velz-1,CVF_REPLACE)
BALL A 0 A_SpawnItem("Ball3",0,0,FALSE)
Goto FadeOut
DamageEnemy:
TNT1 A 0 A_ChangeFlag("USEBOUNCESTATE",FALSE)	//Stop registering bounces.
BALL "#" 0 A_GiveInventory("Variable3",1)	//Indicate the ball is about to disappear.
TNT1 A 0 A_Explode((30),24,!XF_HURTSOURCE,FALSE,12)
Goto FadeOut
}
}

Actor Heart1 : Health 90
{
Radius 8
Height 64
Scale 0.13
Translation "241:244=88:91", "240:240=232:232"
Inventory.Amount 10
Inventory.MaxAmount 100
Inventory.PickupMessage "$TXT_HEART1"
Inventory.PickupSound "misc/heart"
Health.LowMessage 10, "$TXT_HEART1_LOW"
+NOGRAVITY
+FLOATBOB
Tag "Heart (10)"
//$Category health
States
{
Spawn:
HEAR A 0
HEAR A 0 A_ChangeVelocity(0,0,18,CVF_REPLACE)
HEAR A 1
HEAR A 0 A_ChangeVelocity(0,0,0,CVF_REPLACE)
HEAR A -1
Stop
}
}

Actor Heart2 : Heart1 91
{
Scale 0.25
Inventory.Amount 25
Inventory.PickupMessage "$TXT_HEART2"
Health.LowMessage 20, "$TXT_HEART2_LOW"
Tag "Heart (25)"
States
{
Spawn:
HEAR A 0
HEAR A 0 A_ChangeVelocity(0,0,9,CVF_REPLACE)
HEAR A 1
HEAR A 0 A_ChangeVelocity(0,0,0,CVF_REPLACE)
HEAR A -1
Stop
}
}

Actor Heart3 : Heart2 92
{
Scale 0.5
Inventory.Amount 50
Inventory.PickupMessage "$TXT_HEART3"
Health.LowMessage 30, "$TXT_HEART3_LOW"
Tag "Heart (50)"
States
{
Spawn:
HEAR A -1
Stop
}
}

//Technical

Actor SpeedTrailX : PowerupGiver
{
  Inventory.Pickupmessage ""
  Inventory.MaxAmount 0
  Powerup.Type "Speed"
  Powerup.Duration -60
  Speed 0.01
  +AUTOACTIVATE
  States
  {
  Spawn:
    TNT1 A -1 bright
    Stop
  }
}

actor PowerDDamage : PowerDamage
{
damagefactor "normal", 2
damagefactor "Hammer", 2
damagefactor "Umbrella", 2
damagefactor "Flatten", 2
damagefactor "AirDash", 2
damagefactor "Bounce", 2
damagefactor "Fire", 2
damagefactor "Stun", 2
-INVENTORY.INVBAR
}

Actor Cutscene : PowerupGiver
{
  Inventory.Pickupmessage ""
  Inventory.MaxAmount 0
  Powerup.Type "TimeFreezer"
  Powerup.Duration -60
  +AUTOACTIVATE
  States
  {
  Spawn:
    TNT1 A -1 bright
    Stop
  }
}

Actor Invinciblity : PowerupGiver
{
  Inventory.Pickupmessage ""
  Inventory.MaxAmount 0
  Powerup.Type "Invulnerable"
  Powerup.Duration -60
  +AUTOACTIVATE
  States
  {
  Spawn:
    TNT1 A -1 bright
    Stop
  }
}

//KEYS

ACTOR Key1 : DoomKey 94
{
  Gravity 0.5
  Inventory.PickupMessage "$GOTREDKEY"
  Inventory.Icon "ST_KEYS1"
  States
  {
  Spawn:
    KEYI A -1
	Stop
  }
}

ACTOR Key2 : Key1 95
{
  Inventory.PickupMessage "$GOTYELLOWKEY"
  Inventory.Icon "ST_KEYS2"
  States
  {
  Spawn:
    KEYI B -1
	Stop
  }
}

ACTOR Key3 : Key1 96
{
  Inventory.PickupMessage "$GOTGREENKEY"
  Inventory.Icon "ST_KEYS3"
  States
  {
  Spawn:
    KEYI C -1
	Stop
  }
}

ACTOR Key4 : Key1 97
{
  Inventory.PickupMessage "$GOTCYANKEY"
  Inventory.Icon "ST_KEYS4"
  States
  {
  Spawn:
    KEYI D -1
	Stop
  }
}

ACTOR Key5 : Key1 98
{
  Inventory.PickupMessage "$GOTBLUEKEY"
  Inventory.Icon "ST_KEYS5"
  States
  {
  Spawn:
    KEYI E -1
	Stop
  }
}

ACTOR Key6 : Key1 99
{
  Inventory.PickupMessage "$GOTPINKKEY"
  Inventory.Icon "ST_KEYS6"
  States
  {
  Spawn:
    KEYI F -1
	Stop
  }
}